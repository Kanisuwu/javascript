{"version":3,"file":"bundle.js","mappings":";;;;;;;;;AAAA,4FAAuC;;;;;;;;;;;ACA1B;;AAEb,YAAY,mBAAO,CAAC,qDAAY;AAChC,aAAa,mBAAO,CAAC,iEAAkB;AACvC,cAAc,mBAAO,CAAC,yEAAsB;AAC5C,eAAe,mBAAO,CAAC,2EAAuB;AAC9C,oBAAoB,mBAAO,CAAC,6EAAuB;AACnD,mBAAmB,mBAAO,CAAC,mFAA2B;AACtD,sBAAsB,mBAAO,CAAC,yFAA8B;AAC5D,kBAAkB,mBAAO,CAAC,yEAAqB;AAC/C,eAAe,mBAAO,CAAC,yDAAa;AACpC,aAAa,mBAAO,CAAC,mEAAkB;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,6CAA6C;AAC7C;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;;;;;;;;;;;ACnNa;;AAEb,YAAY,mBAAO,CAAC,kDAAS;AAC7B,WAAW,mBAAO,CAAC,gEAAgB;AACnC,YAAY,mBAAO,CAAC,4DAAc;AAClC,kBAAkB,mBAAO,CAAC,wEAAoB;AAC9C,eAAe,mBAAO,CAAC,wDAAY;;AAEnC;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,eAAe,mBAAO,CAAC,kEAAiB;AACxC,oBAAoB,mBAAO,CAAC,4EAAsB;AAClD,iBAAiB,mBAAO,CAAC,sEAAmB;AAC5C,gBAAgB,uFAA6B;;AAE7C;AACA;AACA;AACA;AACA,eAAe,mBAAO,CAAC,oEAAkB;;AAEzC;AACA,qBAAqB,mBAAO,CAAC,gFAAwB;;AAErD;;AAEA;AACA,yBAAsB;;;;;;;;;;;;ACxDT;;AAEb;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;;;;;;;;;;;AClBa;;AAEb,aAAa,mBAAO,CAAC,2DAAU;;AAE/B;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACtHa;;AAEb;AACA;AACA;;;;;;;;;;;;ACJa;;AAEb,YAAY,mBAAO,CAAC,qDAAY;AAChC,eAAe,mBAAO,CAAC,yEAAqB;AAC5C,yBAAyB,mBAAO,CAAC,iFAAsB;AACvD,sBAAsB,mBAAO,CAAC,2EAAmB;AACjD,kBAAkB,mBAAO,CAAC,mEAAe;AACzC,gBAAgB,mBAAO,CAAC,2EAAsB;;AAE9C;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA,yBAAyB;AACzB,KAAK;AACL;AACA,CAAC;;AAED;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;;AAED;;;;;;;;;;;;ACnJa;;AAEb,YAAY,mBAAO,CAAC,qDAAY;;AAEhC;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;;;;;;;;;;;;ACrDa;;AAEb,oBAAoB,mBAAO,CAAC,mFAA0B;AACtD,kBAAkB,mBAAO,CAAC,+EAAwB;;AAElD;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACnBa;;AAEb,mBAAmB,mBAAO,CAAC,qEAAgB;;AAE3C;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACjBa;;AAEb,YAAY,mBAAO,CAAC,qDAAY;AAChC,oBAAoB,mBAAO,CAAC,uEAAiB;AAC7C,eAAe,mBAAO,CAAC,uEAAoB;AAC3C,eAAe,mBAAO,CAAC,yDAAa;AACpC,aAAa,mBAAO,CAAC,mEAAkB;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,SAAS;AACtB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,+BAA+B;AAC/B,uCAAuC;AACvC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;;;;;;;;;;;;ACtFa;;AAEb;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC1Ca;;AAEb,YAAY,mBAAO,CAAC,mDAAU;;AAE9B;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN,2BAA2B;AAC3B,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;;;;;;;;;;;AClGa;;AAEb,kBAAkB,mBAAO,CAAC,mEAAe;;AAEzC;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACxBa;;AAEb,YAAY,mBAAO,CAAC,qDAAY;AAChC,eAAe,mBAAO,CAAC,2DAAe;;AAEtC;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,OAAO;AAClB,WAAW,gBAAgB;AAC3B,aAAa,GAAG;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;;;;;;;;;;;ACrBa;;AAEb,YAAY,mBAAO,CAAC,kDAAS;AAC7B,0BAA0B,mBAAO,CAAC,8FAA+B;AACjE,mBAAmB,mBAAO,CAAC,0EAAqB;;AAEhD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,mBAAO,CAAC,gEAAgB;AACtC,IAAI;AACJ;AACA,cAAc,mBAAO,CAAC,iEAAiB;AACvC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA,CAAC;;AAED;;;;;;;;;;;ACrIA;AACA;AACA;;;;;;;;;;;ACFa;;AAEb;AACA;AACA;AACA,oBAAoB,iBAAiB;AACrC;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACVa;;AAEb,YAAY,mBAAO,CAAC,qDAAY;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;ACrEa;;AAEb;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACba;;AAEb,YAAY,mBAAO,CAAC,qDAAY;;AAEhC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,2CAA2C;AAC3C,SAAS;;AAET;AACA,4DAA4D,wBAAwB;AACpF;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,kCAAkC;AAClC,gCAAgC,cAAc;AAC9C;AACA;AACA,KAAK;AACL;;;;;;;;;;;;ACpDa;;AAEb;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACba;;AAEb;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,SAAS;AACtB;AACA;AACA;AACA;;;;;;;;;;;;ACVa;;AAEb,YAAY,mBAAO,CAAC,qDAAY;;AAEhC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,gBAAgB,SAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;;;;;;;;;;;ACnEa;;AAEb,YAAY,mBAAO,CAAC,mDAAU;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;;;;;;;;;;ACXa;;AAEb,YAAY,mBAAO,CAAC,qDAAY;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB;;AAElB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,GAAG;;AAEH;AACA;;;;;;;;;;;;ACpDa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA,WAAW,UAAU;AACrB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC1Ba;;AAEb,cAAc,wFAA8B;;AAE5C;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA,WAAW,mBAAmB;AAC9B,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;ACjFa;;AAEb,WAAW,mBAAO,CAAC,gEAAgB;;AAEnC;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,UAAU;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oCAAoC,OAAO;AAC3C;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,SAAS,GAAG,SAAS;AAC5C,4BAA4B;AAC5B;AACA;AACA,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,4BAA4B;AAC5B,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;;AAEA,wCAAwC,OAAO;AAC/C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC5VA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT,OAAO;AACP,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,oBAAoB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,6BAA6B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED,IAAI,KAA0B;AAC9B;AACA;;;;;;;;;;;;AChQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB;;AAEnB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,sBAAsB;AACxC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe;AACf;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA,oBAAoB,SAAS;AAC7B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;;AAEA,kCAAkC,QAAQ;AAC1C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAoB,iBAAiB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,QAAQ;AACR;AACA,uCAAuC,QAAQ;AAC/C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,OAAO;AACzB;AACA;AACA;;AAEA;AACA,SAAS,yBAAyB;AAClC;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,8DAA8D,YAAY;AAC1E;AACA,8DAA8D,YAAY;AAC1E;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,qCAAqC,YAAY;AACjD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;AACA;;;;;;;;;;;AChfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY,2GAA4C;;AAExD;;AAEA,CAAC;;;;;;;;;;;AChBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,0CAA0C,qEAAqE;AACxK;;AAEA,UAAU,mBAAO,CAAC,4CAAO;;AAEzB,iBAAiB,mFAA8B;;AAE/C;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,SAAS;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,8CAA8C,SAAS;AACvD;AACA,YAAY,eAAe;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,UAAU;AACzD;AACA,YAAY,eAAe;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,SAAS;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,UAAU;AACV;AACA;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA;AACA;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;;;;;ACjyBD;;;;;;;;;;;;;;;;;ACAyC;AACJ;;AAErC;;AAEe;AACf;;AAEA;;AAEA;AACA;AACA,6DAA6D,cAAc;AAC3E;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA,0FAA0F,uDAAU;AACpG,IAAI;AACJ;AACA,mBAAmB,yDAAY;AAC/B;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AC3CoB;AACkC;;AAEtD;AACA;AACA,uBAAuB,uCAAU,wBAAwB,uCAAU;;AAEpD,4BAA4B,0BAA0B,IAAI;AACzE,2DAA2D,gEAAkB,+BAA+B;;AAE5G;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;;;;;;;;;;;;;;;;ACjDe;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;;;;;;;;;;;;;;;;ACVe,qDAAqD;AACpE;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,mDAAmD,cAAc;AACjE;AACA;;AAEA;AACA;AACA,mDAAmD,aAAa;AAChE;AACA;;AAEA;AACA;AACA,iDAAiD,MAAM;AACvD;AACA;;AAEA;AACA;AACA,4DAA4D,cAAc;AAC1E;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;ACrC6C;;AAE7C;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,IAAI;AACP;AACA;AACA;AACA,qGAAqG,gBAAgB;AACrH;;AAEA;AACA;AACA;;AAEA;AACA,yGAAyG,YAAY,MAAM,mBAAmB;AAC9I;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,uDAAc;AAC/B;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;AACF;;AAEO;;;;;;;;;;;;;;;;;;;;;ACpMP;AACA;AACA;AACA;AACA;AACyB;AACU;AACyB;AACV;AACV;AACzB;AACf;AACA,2BAA2B,qEAAc,cAAc,uCAAS;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4DAAO;AAC9B;AACA;AACA;AACA,uCAAuC,4DAAO;AAC9C;AACA;AACA;AACA,wCAAwC,iDAAI,qBAAqB,gBAAgB;AACjF;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kEAAW;AACvB;AACA;AACA,gEAAgE,mBAAmB;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4DAAO;AAC9B;AACA;AACA;AACA,uCAAuC,4DAAO;AAC9C;AACA;AACA;AACA,wCAAwC,iDAAI,qBAAqB,gBAAgB;AACjF;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kEAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,QAAQ,SAAS;AAC1I;AACA;AACA;AACA,uCAAuC,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,QAAQ,UAAU;AAC3J;AACA;AACA;AACA,wCAAwC,iDAAI,qBAAqB,gBAAgB;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kEAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,iBAAiB,SAAS;AACnJ;AACA;AACA;AACA,uCAAuC,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,iBAAiB,UAAU;AACpK;AACA;AACA;AACA,wCAAwC,iDAAI,qBAAqB,gBAAgB;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kEAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,eAAe,SAAS;AACjJ;AACA;AACA;AACA,uCAAuC,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,eAAe,UAAU;AAClK;AACA;AACA;AACA,wCAAwC,iDAAI,qBAAqB,gBAAgB;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kEAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,eAAe,SAAS;AACjJ;AACA;AACA;AACA,uCAAuC,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,eAAe,UAAU;AAClK;AACA;AACA;AACA,wCAAwC,iDAAI,qBAAqB,gBAAgB;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kEAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,iBAAiB,GAAG;AAC7I;AACA;AACA;AACA,uCAAuC,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,iBAAiB,IAAI;AAC9J;AACA;AACA;AACA,wCAAwC,iDAAI,eAAe,gBAAgB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kEAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,uBAAuB,GAAG;AACnJ;AACA;AACA;AACA,uCAAuC,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,uBAAuB,IAAI;AACpK;AACA;AACA;AACA,wCAAwC,iDAAI,eAAe,gBAAgB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kEAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,mBAAmB,SAAS;AACrJ;AACA;AACA;AACA,uCAAuC,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,mBAAmB,UAAU;AACtK;AACA;AACA;AACA,wCAAwC,iDAAI,qBAAqB,gBAAgB;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kEAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,sBAAsB,SAAS;AACxJ;AACA;AACA;AACA,uCAAuC,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,sBAAsB,UAAU;AACzK;AACA;AACA;AACA,wCAAwC,iDAAI,qBAAqB,gBAAgB;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kEAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,4BAA4B,SAAS;AAC9J;AACA;AACA;AACA,uCAAuC,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,4BAA4B,UAAU;AAC/K;AACA;AACA;AACA,wCAAwC,iDAAI,qBAAqB,gBAAgB;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kEAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,kBAAkB,GAAG;AAC9I;AACA;AACA;AACA,uCAAuC,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,kBAAkB,IAAI;AAC/J;AACA;AACA;AACA,wCAAwC,iDAAI,eAAe,gBAAgB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kEAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,oBAAoB,SAAS;AACtJ;AACA;AACA;AACA,uCAAuC,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,oBAAoB,UAAU;AACvK;AACA;AACA;AACA,wCAAwC,iDAAI,qBAAqB,gBAAgB;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kEAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4DAAO,kBA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AwC,iDAAI,qBAAqB,gBAAgB;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kEAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,cAAc,SAAS;AAChJ;AACA;AACA;AACA,uCAAuC,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,cAAc,UAAU;AACjK;AACA;AACA;AACA,wCAAwC,iDAAI,qBAAqB,gBAAgB;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kEAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,UAAU,GAAG;AACtI;AACA;AACA;AACA,uCAAuC,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,UAAU,IAAI;AACvJ;AACA;AACA;AACA,wCAAwC,iDAAI,eAAe,gBAAgB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kEAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,OAAO,SAAS;AACzI;AACA;AACA;AACA,uCAAuC,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,OAAO,UAAU;AAC1J;AACA;AACA;AACA,wCAAwC,iDAAI,qBAAqB,gBAAgB;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kEAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,eAAe,SAAS;AACjJ;AACA;AACA;AACA,uCAAuC,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,eAAe,UAAU;AAClK;AACA;AACA;AACA,wCAAwC,iDAAI,qBAAqB,gBAAgB;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kEAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,oBAAoB,SAAS;AACtJ;AACA;AACA;AACA,uCAAuC,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,oBAAoB,UAAU;AACvK;AACA;AACA;AACA,wCAAwC,iDAAI,qBAAqB,gBAAgB;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kEAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,gBAAgB,SAAS;AAClJ;AACA;AACA;AACA,uCAAuC,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,gBAAgB,UAAU;AACnK;AACA;AACA;AACA,wCAAwC,iDAAI,qBAAqB,gBAAgB;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kEAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,oBAAoB,SAAS;AACtJ;AACA;AACA;AACA,uCAAuC,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,oBAAoB,UAAU;AACvK;AACA;AACA;AACA,wCAAwC,iDAAI,qBAAqB,gBAAgB;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kEAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAu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CA;AACA,wCAAwC,iDAAI,eAAe,gBAAgB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kEAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,YAAY,SAAS;AAC9I;AACA;AACA;AACA,uCAAuC,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,YAAY,UAAU;AAC/J;AACA;AACA;AACA,wCAAwC,iDAAI,qBAAqB,gBAAgB;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kEAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,SAAS,SAAS;AAC3I;AACA;AACA;AACA,uCAAuC,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,SAAS,UAAU;AAC5J;AACA;AACA;AACA,wCAAwC,iDAAI,qBAAqB,gBAAgB;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kEAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,cAAc,SAAS;AAChJ;AACA;AACA;AACA,uCAAuC,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,cAAc,UAAU;AACjK;AACA;AACA;AACA,wCAAwC,iDAAI,qBAAqB,gBAAgB;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kEAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,SAAS,SAAS;AAC3I;AACA;AACA;AACA,uCAAuC,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,SAAS,UAAU;AAC5J;AACA;AACA;AACA,wCAAwC,iDAAI,qBAAqB,gBAAgB;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kEAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,kBAAkB,SAAS;AACpJ;AACA;AACA;AACA,uCAAuC,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,kBAAkB,UAAU;AACrK;AACA;AACA;AACA,wCAAwC,iDAAI,qBAAqB,gBAAgB;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kEAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,UAAU,SAAS;AAC5I;AACA;AACA;AACA,uCAAuC,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,UAAU,UAAU;AAC7J;AACA;AACA;AACA,wCAAwC,iDAAI,qBAAqB,gBAAgB;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kEAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,gBAAgB,SAAS;AAClJ;AACA;AACA;AACA,uCAAuC,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,gBAAgB,UAAU;AACnK;AACA;AACA;AACA,wCAAwC,iDAAI,qBAAqB,gBAAgB;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kEAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,eAAe,SAAS;AACjJ;AACA;AACA;AACA,uCAAuC,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,eAAe,UAAU;AAClK;AACA;AACA;AACA,wCAAwC,iDAAI,qBAAqB,gBAAgB;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kEAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,kBAAkB,SAAS;AACpJ;AACA;AACA;AACA,uCAAuC,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,kBAAkB,UAAU;AACrK;AACA;AACA;AACA,wCAAwC,iDAAI,qBAAqB,gBAAgB;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kEAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,gBAAgB,SAAS;AAClJ;AACA;AACA;AACA,uCAAuC,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,gBAAgB,UAAU;AACnK;AACA;AACA;AACA,wCAAwC,iDAAI,qBAAqB,gBAAgB;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kEAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,kBAAkB,SAAS;AACpJ;AACA;AACA;AACA,uCAAuC,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,kBAAkB,UAAU;AACrK;AACA;AACA;AACA,wCAAwC,iDAAI,qBAAqB,gBAAgB;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kEAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,OAAO,SAAS;AACzI;AACA;AACA;AACA,uCAAuC,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,OAAO,UAAU;AAC1J;AACA;AACA;AACA,wCAAwC,iDAAI,qBAAqB,gBAAgB;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kEAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,OAAO,SAAS;AACzI;AACA;AACA;AACA,uCAAuC,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,OAAO,UAAU;AAC1J;AACA;AACA;AACA,wCAAwC,iDAAI,qBAAqB,gBAAgB;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kEAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,WAAW,SAAS;AAC7I;AACA;AACA;AACA,uCAAuC,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,WAAW,UAAU;AAC9J;AACA;AACA;AACA,wCAAwC,iDAAI,qBAAqB,gBAAgB;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kEAAW;AACvB;AACA;AACA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,eAAe,MAAM,UAAU,OAAO;AAC3J;AACA;AACA,YAAY,kEAAW;AACvB;AACA;AACA;AACA;AACA,kBAAkB,gBAAgB;AAClC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A,YAAY,kEAAW;AACvB;AACA;AACA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,iBAAiB,MAAM,UAAU,OAAO;AAC7J;AACA;AACA,YAAY,kEAAW;AACvB;AACA;AACA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,iBAAiB,MAAM,UAAU,OAAO;AAC7J;AACA;AACA,YAAY,kEAAW;AACvB;AACA;AACA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,uBAAuB,MAAM,UAAU,OAAO;AACnK;AACA;AACA,YAAY,kEAAW;AACvB;AACA;AACA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,cAAc,MAAM,UAAU,OAAO;AAC1J;AACA;AACA,YAAY,kEAAW;AACvB;AACA;AACA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,wBAAwB,MAAM,UAAU,OAAO;AACpK;AACA;AACA,YAAY,kEAAW;AACvB;AACA;AACA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,uBAAuB,MAAM,UAAU,OAAO;AACnK;AACA;AACA,YAAY,kEAAW;AACvB;AACA;AACA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,2BAA2B,MAAM,UAAU,OAAO;AACvK;AACA;AACA,YAAY,kEAAW;AACvB;AACA;AACA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,qBAAqB,MAAM,UAAU,OAAO;AACjK;AACA;AACA,YAAY,kEAAW;AACvB;AACA;AACA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,iBAAiB,MAAM,UAAU,OAAO;AAC7J;AACA;AACA,YAAY,kEAAW;AACvB;AACA;AACA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,cAAc,MAAM,UAAU,OAAO;AAC1J;AACA;AACA,YAAY,kEAAW;AACvB;AACA;AACA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,sBAAsB,MAAM,UAAU,OAAO;AAClK;AACA;AACA,YAAY,kEAAW;AACvB;AACA;AACA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,2BAA2B,MAAM,UAAU,OAAO;AACvK;AACA;AACA,YAAY,kEAAW;AACvB;AACA;AACA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,uBAAuB,MAAM,UAAU,OAAO;AACnK;AACA;AACA,YAAY,kEAAW;AACvB;AACA;AACA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,2BAA2B,MAAM,UAAU,OAAO;AACvK;AACA;AACA,YAAY,kEAAW;AACvB;AACA;AACA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,2BAA2B,MAAM,UAAU,OAAO;AACvK;AACA;AACA,YAAY,kEAAW;AACvB;AACA;AACA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,qBAAqB,MAAM,UAAU,OAAO;AACjK;AACA;AACA,YAAY,kEAAW;AACvB;AACA;AACA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,kBAAkB,MAAM,UAAU,OAAO;AAC9J;AACA;AACA,YAAY,kEAAW;AACvB;AACA;AACA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,uBAAuB,MAAM,UAAU,OAAO;AACnK;AACA;AACA,YAAY,kEAAW;AACvB;AACA;AACA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,uBAAuB,MAAM,UAAU,OAAO;AACnK;AACA;AACA,YAAY,kEAAW;AACvB;AACA;AACA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;A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;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,yBAAyB,MAAM,UAAU,OAAO;AACrK;AACA;AACA,YAAY,kEAAW;AACvB;AACA;AACA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,cAAc,MAAM,UAAU,OAAO;AAC1J;AACA;AACA,YAAY,kEAAW;AACvB;AACA;AACA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,cAAc,MAAM,UAAU,OAAO;AAC1J;AACA;AACA,YAAY,kEAAW;AACvB;AACA;AACA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,kBAAkB,MAAM,UAAU,OAAO;AAC9J;AACA;AACA,YAAY,kEAAW;AACvB;AACA;AACA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,4DAAO,kBAAkB,sBAAsB,EAAE,sBAAsB,EAAE,yBAAyB,SAAS,MAAM,UAAU,OAAO;AACrJ;AACA;AACA,YAAY,kEAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,2BAA2B;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACh5EA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA,kCAAkC,gBAAgB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,cAAc,EAAC;;;;;;;;;;;;;;;;AClC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,WAAW,EAAC;;;;;;;;;;;;;;;;;;ACV3B;AAC0B;AACkB;AAC5C;AACA;AACA;AACA;AACA,oBAAoB,gBAAgB,EAAE,gBAAgB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,sCAAS;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,4DAAW;AACnB;AACA;AACA;AACA;AACA;AACA,iEAAe,OAAO,EAAC;;;;;;;UCnDvB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;+CCLA,qJAAAA,mBAAA,YAAAA,oBAAA,WAAAC,CAAA,SAAAC,CAAA,EAAAD,CAAA,OAAAE,CAAA,GAAAC,MAAA,CAAAC,SAAA,EAAAC,CAAA,GAAAH,CAAA,CAAAI,cAAA,EAAAC,CAAA,GAAAJ,MAAA,CAAAK,cAAA,cAAAP,CAAA,EAAAD,CAAA,EAAAE,CAAA,IAAAD,CAAA,CAAAD,CAAA,IAAAE,CAAA,CAAAO,KAAA,KAAAC,CAAA,wBAAAC,MAAA,GAAAA,MAAA,OAAAC,CAAA,GAAAF,CAAA,CAAAG,QAAA,kBAAAC,CAAA,GAAAJ,CAAA,CAAAK,aAAA,uBAAAC,CAAA,GAAAN,CAAA,CAAAO,WAAA,8BAAAC,OAAAjB,CAAA,EAAAD,CAAA,EAAAE,CAAA,WAAAC,MAAA,CAAAK,cAAA,CAAAP,CAAA,EAAAD,CAAA,IAAAS,KAAA,EAAAP,CAAA,EAAAiB,UAAA,MAAAC,YAAA,MAAAC,QAAA,SAAApB,CAAA,CAAAD,CAAA,WAAAkB,MAAA,mBAAAjB,CAAA,IAAAiB,MAAA,YAAAA,OAAAjB,CAAA,EAAAD,CAAA,EAAAE,CAAA,WAAAD,CAAA,CAAAD,CAAA,IAAAE,CAAA,gBAAAoB,KAAArB,CAAA,EAAAD,CAAA,EAAAE,CAAA,EAAAG,CAAA,QAAAK,CAAA,GAAAV,CAAA,IAAAA,CAAA,CAAAI,SAAA,YAAAmB,SAAA,GAAAvB,CAAA,GAAAuB,SAAA,EAAAX,CAAA,GAAAT,MAAA,CAAAqB,MAAA,CAAAd,CAAA,CAAAN,SAAA,GAAAU,CAAA,OAAAW,OAAA,CAAApB,CAAA,gBAAAE,CAAA,CAAAK,CAAA,eAAAH,KAAA,EAAAiB,gBAAA,CAAAzB,CAAA,EAAAC,CAAA,EAAAY,CAAA,MAAAF,CAAA,aAAAe,SAAA1B,CAAA,EAAAD,CAAA,EAAAE,CAAA,mBAAA0B,IAAA,YAAAC,GAAA,EAAA5B,CAAA,CAAA6B,IAAA,CAAA9B,CAAA,EAAAE,CAAA,cAAAD,CAAA,aAAA2B,IAAA,WAAAC,GAAA,EAAA5B,CAAA,QAAAD,CAAA,CAAAsB,IAAA,GAAAA,IAAA,MAAAS,CAAA,qBAAAC,CAAA,qBAAAC,CAAA,gBAAAC,CAAA,gBAAAC,CAAA,gBAAAZ,UAAA,cAAAa,kBAAA,cAAAC,2BAAA,SAAAC,CAAA,OAAApB,MAAA,CAAAoB,CAAA,EAAA1B,CAAA,qCAAA2B,CAAA,GAAApC,MAAA,CAAAqC,cAAA,EAAAC,CAAA,GAAAF,CAAA,IAAAA,CAAA,CAAAA,CAAA,CAAAG,MAAA,QAAAD,CAAA,IAAAA,CAAA,KAAAvC,CAAA,IAAAG,CAAA,CAAAyB,IAAA,CAAAW,CAAA,EAAA7B,CAAA,MAAA0B,CAAA,GAAAG,CAAA,OAAAE,CAAA,GAAAN,0BAAA,CAAAjC,SAAA,GAAAmB,SAAA,CAAAnB,SAAA,GAAAD,MAAA,CAAAqB,MAAA,CAAAc,CAAA,YAAAM,sBAAA3C,CAAA,gCAAA4C,OAAA,WAAA7C,CAAA,IAAAkB,MAAA,CAAAjB,CAAA,EAAAD,CAAA,YAAAC,CAAA,gBAAA6C,OAAA,CAAA9C,CAAA,EAAAC,CAAA,sBAAA8C,cAAA9C,CAAA,EAAAD,CAAA,aAAAgD,OAAA9C,CAAA,EAAAK,CAAA,EAAAG,CAAA,EAAAE,CAAA,QAAAE,CAAA,GAAAa,QAAA,CAAA1B,CAAA,CAAAC,CAAA,GAAAD,CAAA,EAAAM,CAAA,mBAAAO,CAAA,CAAAc,IAAA,QAAAZ,CAAA,GAAAF,CAAA,CAAAe,GAAA,EAAAE,CAAA,GAAAf,CAAA,CAAAP,KAAA,SAAAsB,CAAA,gBAAAkB,OAAA,CAAAlB,CAAA,KAAA1B,CAAA,CAAAyB,IAAA,CAAAC,CAAA,eAAA/B,CAAA,CAAAkD,OAAA,CAAAnB,CAAA,CAAAoB,OAAA,EAAAC,IAAA,WAAAnD,CAAA,IAAA+C,MAAA,SAAA/C,CAAA,EAAAS,CAAA,EAAAE,CAAA,gBAAAX,CAAA,IAAA+C,MAAA,UAAA/C,CAAA,EAAAS,CAAA,EAAAE,CAAA,QAAAZ,CAAA,CAAAkD,OAAA,CAAAnB,CAAA,EAAAqB,IAAA,WAAAnD,CAAA,IAAAe,CAAA,CAAAP,KAAA,GAAAR,CAAA,EAAAS,CAAA,CAAAM,CAAA,gBAAAf,CAAA,WAAA+C,MAAA,UAAA/C,CAAA,EAAAS,CAAA,EAAAE,CAAA,SAAAA,CAAA,CAAAE,CAAA,CAAAe,GAAA,SAAA3B,CAAA,EAAAK,CAAA,oBAAAE,KAAA,WAAAA,MAAAR,CAAA,EAAAI,CAAA,aAAAgD,2BAAA,eAAArD,CAAA,WAAAA,CAAA,EAAAE,CAAA,IAAA8C,MAAA,CAAA/C,CAAA,EAAAI,CAAA,EAAAL,CAAA,EAAAE,CAAA,gBAAAA,CAAA,GAAAA,CAAA,GAAAA,CAAA,CAAAkD,IAAA,CAAAC,0BAAA,EAAAA,0BAAA,IAAAA,0BAAA,qBAAA3B,iBAAA1B,CAAA,EAAAE,CAAA,EAAAG,CAAA,QAAAE,CAAA,GAAAwB,CAAA,mBAAArB,CAAA,EAAAE,CAAA,QAAAL,CAAA,KAAA0B,CAAA,YAAAqB,KAAA,sCAAA/C,CAAA,KAAA2B,CAAA,oBAAAxB,CAAA,QAAAE,CAAA,WAAAH,KAAA,EAAAR,CAAA,EAAAsD,IAAA,eAAAlD,CAAA,CAAAmD,MAAA,GAAA9C,CAAA,EAAAL,CAAA,CAAAwB,GAAA,GAAAjB,CAAA,UAAAE,CAAA,GAAAT,CAAA,CAAAoD,QAAA,MAAA3C,CAAA,QAAAE,CAAA,GAAA0C,mBAAA,CAAA5C,CAAA,EAAAT,CAAA,OAAAW,CAAA,QAAAA,CAAA,KAAAmB,CAAA,mBAAAnB,CAAA,qBAAAX,CAAA,CAAAmD,MAAA,EAAAnD,CAAA,CAAAsD,IAAA,GAAAtD,CAAA,CAAAuD,KAAA,GAAAvD,CAAA,CAAAwB,GAAA,sBAAAxB,CAAA,CAAAmD,MAAA,QAAAjD,CAAA,KAAAwB,CAAA,QAAAxB,CAAA,GAAA2B,CAAA,EAAA7B,CAAA,CAAAwB,GAAA,EAAAxB,CAAA,CAAAwD,iBAAA,CAAAxD,CAAA,CAAAwB,GAAA,uBAAAxB,CAAA,CAAAmD,MAAA,IAAAnD,CAAA,CAAAyD,MAAA,WAAAzD,CAAA,CAAAwB,GAAA,GAAAtB,CAAA,GAAA0B,CAAA,MAAAK,CAAA,GAAAX,QAAA,CAAA3B,CAAA,EAAAE,CAAA,EAAAG,CAAA,oBAAAiC,CAAA,CAAAV,IAAA,QAAArB,CAAA,GAAAF,CAAA,CAAAkD,IAAA,GAAArB,CAAA,GAAAF,CAAA,EAAAM,CAAA,CAAAT,GAAA,KAAAM,CAAA,qBAAA1B,KAAA,EAAA6B,CAAA,CAAAT,GAAA,EAAA0B,IAAA,EAAAlD,CAAA,CAAAkD,IAAA,kBAAAjB,CAAA,CAAAV,IAAA,KAAArB,CAAA,GAAA2B,CAAA,EAAA7B,CAAA,CAAAmD,MAAA,YAAAnD,CAAA,CAAAwB,GAAA,GAAAS,CAAA,CAAAT,GAAA,mBAAA6B,oBAAA1D,CAAA,EAAAE,CAAA,QAAAG,CAAA,GAAAH,CAAA,CAAAsD,MAAA,EAAAjD,CAAA,GAAAP,CAAA,CAAAa,QAAA,CAAAR,CAAA,OAAAE,CAAA,KAAAN,CAAA,SAAAC,CAAA,CAAAuD,QAAA,qBAAApD,CAAA,IAAAL,CAAA,CAAAa,QAAA,eAAAX,CAAA,CAAAsD,MAAA,aAAAtD,CAAA,CAAA2B,GAAA,GAAA5B,CAAA,EAAAyD,mBAAA,CAAA1D,CAAA,EAAAE,CAAA,eAAAA,CAAA,CAAAsD,MAAA,kBAAAnD,CAAA,KAAAH,CAAA,CAAAsD,MAAA,YAAAtD,CAAA,CAAA2B,GAAA,OAAAkC,SAAA,uCAAA1D,CAAA,iBAAA8B,CAAA,MAAAzB,CAAA,GAAAiB,QAAA,CAAApB,CAAA,EAAAP,CAAA,CAAAa,QAAA,EAAAX,CAAA,CAAA2B,GAAA,mBAAAnB,CAAA,CAAAkB,IAAA,SAAA1B,CAAA,CAAAsD,MAAA,YAAAtD,CAAA,CAAA2B,GAAA,GAAAnB,CAAA,CAAAmB,GAAA,EAAA3B,CAAA,CAAAuD,QAAA,SAAAtB,CAAA,MAAAvB,CAAA,GAAAF,CAAA,CAAAmB,GAAA,SAAAjB,CAAA,GAAAA,CAAA,CAAA2C,IAAA,IAAArD,CAAA,CAAAF,CAAA,CAAAgE,UAAA,IAAApD,CAAA,CAAAH,KAAA,EAAAP,CAAA,CAAA+D,IAAA,GAAAjE,CAAA,CAAAkE,OAAA,eAAAhE,CAAA,CAAAsD,MAAA,KAAAtD,CAAA,CAAAsD,MAAA,WAAAtD,CAAA,CAAA2B,GAAA,GAAA5B,CAAA,GAAAC,CAAA,CAAAuD,QAAA,SAAAtB,CAAA,IAAAvB,CAAA,IAAAV,CAAA,CAAAsD,MAAA,YAAAtD,CAAA,CAAA2B,GAAA,OAAAkC,SAAA,sCAAA7D,CAAA,CAAAuD,QAAA,SAAAtB,CAAA,cAAAgC,aAAAlE,CAAA,QAAAD,CAAA,KAAAoE,MAAA,EAAAnE,CAAA,YAAAA,CAAA,KAAAD,CAAA,CAAAqE,QAAA,GAAApE,CAAA,WAAAA,CAAA,KAAAD,CAAA,CAAAsE,UAAA,GAAArE,CAAA,KAAAD,CAAA,CAAAuE,QAAA,GAAAtE,CAAA,WAAAuE,UAAA,CAAAC,IAAA,CAAAzE,CAAA,cAAA0E,cAAAzE,CAAA,QAAAD,CAAA,GAAAC,CAAA,CAAA0E,UAAA,QAAA3E,CAAA,CAAA4B,IAAA,oBAAA5B,CAAA,CAAA6B,GAAA,EAAA5B,CAAA,CAAA0E,UAAA,GAAA3E,CAAA,aAAAyB,QAAAxB,CAAA,SAAAuE,UAAA,MAAAJ,MAAA,aAAAnE,CAAA,CAAA4C,OAAA,CAAAsB,YAAA,cAAAS,KAAA,iBAAAlC,OAAA1C,CAAA,QAAAA,CAAA,WAAAA,CAAA,QAAAE,CAAA,GAAAF,CAAA,CAAAY,CAAA,OAAAV,CAAA,SAAAA,CAAA,CAAA4B,IAAA,CAAA9B,CAAA,4BAAAA,CAAA,CAAAiE,IAAA,SAAAjE,CAAA,OAAA6E,KAAA,CAAA7E,CAAA,CAAA8E,MAAA,SAAAvE,CAAA,OAAAG,CAAA,YAAAuD,KAAA,aAAA1D,CAAA,GAAAP,CAAA,CAAA8E,MAAA,OAAAzE,CAAA,CAAAyB,IAAA,CAAA9B,CAAA,EAAAO,CAAA,UAAA0D,IAAA,CAAAxD,KAAA,GAAAT,CAAA,CAAAO,CAAA,GAAA0D,IAAA,CAAAV,IAAA,OAAAU,IAAA,SAAAA,IAAA,CAAAxD,KAAA,GAAAR,CAAA,EAAAgE,IAAA,CAAAV,IAAA,OAAAU,IAAA,YAAAvD,CAAA,CAAAuD,IAAA,GAAAvD,CAAA,gBAAAqD,SAAA,CAAAd,OAAA,CAAAjD,CAAA,kCAAAoC,iBAAA,CAAAhC,SAAA,GAAAiC,0BAAA,EAAA9B,CAAA,CAAAoC,CAAA,mBAAAlC,KAAA,EAAA4B,0BAAA,EAAAjB,YAAA,SAAAb,CAAA,CAAA8B,0BAAA,mBAAA5B,KAAA,EAAA2B,iBAAA,EAAAhB,YAAA,SAAAgB,iBAAA,CAAA2C,WAAA,GAAA7D,MAAA,CAAAmB,0BAAA,EAAArB,CAAA,wBAAAhB,CAAA,CAAAgF,mBAAA,aAAA/E,CAAA,QAAAD,CAAA,wBAAAC,CAAA,IAAAA,CAAA,CAAAgF,WAAA,WAAAjF,CAAA,KAAAA,CAAA,KAAAoC,iBAAA,6BAAApC,CAAA,CAAA+E,WAAA,IAAA/E,CAAA,CAAAkF,IAAA,OAAAlF,CAAA,CAAAmF,IAAA,aAAAlF,CAAA,WAAAE,MAAA,CAAAiF,cAAA,GAAAjF,MAAA,CAAAiF,cAAA,CAAAnF,CAAA,EAAAoC,0BAAA,KAAApC,CAAA,CAAAoF,SAAA,GAAAhD,0BAAA,EAAAnB,MAAA,CAAAjB,CAAA,EAAAe,CAAA,yBAAAf,CAAA,CAAAG,SAAA,GAAAD,MAAA,CAAAqB,MAAA,CAAAmB,CAAA,GAAA1C,CAAA,KAAAD,CAAA,CAAAsF,KAAA,aAAArF,CAAA,aAAAkD,OAAA,EAAAlD,CAAA,OAAA2C,qBAAA,CAAAG,aAAA,CAAA3C,SAAA,GAAAc,MAAA,CAAA6B,aAAA,CAAA3C,SAAA,EAAAU,CAAA,iCAAAd,CAAA,CAAA+C,aAAA,GAAAA,aAAA,EAAA/C,CAAA,CAAAuF,KAAA,aAAAtF,CAAA,EAAAC,CAAA,EAAAG,CAAA,EAAAE,CAAA,EAAAG,CAAA,eAAAA,CAAA,KAAAA,CAAA,GAAA8E,OAAA,OAAA5E,CAAA,OAAAmC,aAAA,CAAAzB,IAAA,CAAArB,CAAA,EAAAC,CAAA,EAAAG,CAAA,EAAAE,CAAA,GAAAG,CAAA,UAAAV,CAAA,CAAAgF,mBAAA,CAAA9E,CAAA,IAAAU,CAAA,GAAAA,CAAA,CAAAqD,IAAA,GAAAb,IAAA,WAAAnD,CAAA,WAAAA,CAAA,CAAAsD,IAAA,GAAAtD,CAAA,CAAAQ,KAAA,GAAAG,CAAA,CAAAqD,IAAA,WAAArB,qBAAA,CAAAD,CAAA,GAAAzB,MAAA,CAAAyB,CAAA,EAAA3B,CAAA,gBAAAE,MAAA,CAAAyB,CAAA,EAAA/B,CAAA,iCAAAM,MAAA,CAAAyB,CAAA,6DAAA3C,CAAA,CAAAyF,IAAA,aAAAxF,CAAA,QAAAD,CAAA,GAAAG,MAAA,CAAAF,CAAA,GAAAC,CAAA,gBAAAG,CAAA,IAAAL,CAAA,EAAAE,CAAA,CAAAuE,IAAA,CAAApE,CAAA,UAAAH,CAAA,CAAAwF,OAAA,aAAAzB,KAAA,WAAA/D,CAAA,CAAA4E,MAAA,SAAA7E,CAAA,GAAAC,CAAA,CAAAyF,GAAA,QAAA1F,CAAA,IAAAD,CAAA,SAAAiE,IAAA,CAAAxD,KAAA,GAAAR,CAAA,EAAAgE,IAAA,CAAAV,IAAA,OAAAU,IAAA,WAAAA,IAAA,CAAAV,IAAA,OAAAU,IAAA,QAAAjE,CAAA,CAAA0C,MAAA,GAAAA,MAAA,EAAAjB,OAAA,CAAArB,SAAA,KAAA6E,WAAA,EAAAxD,OAAA,EAAAmD,KAAA,WAAAA,MAAA5E,CAAA,aAAA4F,IAAA,WAAA3B,IAAA,WAAAN,IAAA,QAAAC,KAAA,GAAA3D,CAAA,OAAAsD,IAAA,YAAAE,QAAA,cAAAD,MAAA,gBAAA3B,GAAA,GAAA5B,CAAA,OAAAuE,UAAA,CAAA3B,OAAA,CAAA6B,aAAA,IAAA1E,CAAA,WAAAE,CAAA,kBAAAA,CAAA,CAAA2F,MAAA,OAAAxF,CAAA,CAAAyB,IAAA,OAAA5B,CAAA,MAAA2E,KAAA,EAAA3E,CAAA,CAAA4F,KAAA,cAAA5F,CAAA,IAAAD,CAAA,MAAA8F,IAAA,WAAAA,KAAA,SAAAxC,IAAA,WAAAtD,CAAA,QAAAuE,UAAA,IAAAG,UAAA,kBAAA1E,CAAA,CAAA2B,IAAA,QAAA3B,CAAA,CAAA4B,GAAA,cAAAmE,IAAA,KAAAnC,iBAAA,WAAAA,kBAAA7D,CAAA,aAAAuD,IAAA,QAAAvD,CAAA,MAAAE,CAAA,kBAAA+F,OAAA5F,CAAA,EAAAE,CAAA,WAAAK,CAAA,CAAAgB,IAAA,YAAAhB,CAAA,CAAAiB,GAAA,GAAA7B,CAAA,EAAAE,CAAA,CAAA+D,IAAA,GAAA5D,CAAA,EAAAE,CAAA,KAAAL,CAAA,CAAAsD,MAAA,WAAAtD,CAAA,CAAA2B,GAAA,GAAA5B,CAAA,KAAAM,CAAA,aAAAA,CAAA,QAAAiE,UAAA,CAAAM,MAAA,MAAAvE,CAAA,SAAAA,CAAA,QAAAG,CAAA,QAAA8D,UAAA,CAAAjE,CAAA,GAAAK,CAAA,GAAAF,CAAA,CAAAiE,UAAA,iBAAAjE,CAAA,CAAA0D,MAAA,SAAA6B,MAAA,aAAAvF,CAAA,CAAA0D,MAAA,SAAAwB,IAAA,QAAA9E,CAAA,GAAAT,CAAA,CAAAyB,IAAA,CAAApB,CAAA,eAAAM,CAAA,GAAAX,CAAA,CAAAyB,IAAA,CAAApB,CAAA,qBAAAI,CAAA,IAAAE,CAAA,aAAA4E,IAAA,GAAAlF,CAAA,CAAA2D,QAAA,SAAA4B,MAAA,CAAAvF,CAAA,CAAA2D,QAAA,gBAAAuB,IAAA,GAAAlF,CAAA,CAAA4D,UAAA,SAAA2B,MAAA,CAAAvF,CAAA,CAAA4D,UAAA,cAAAxD,CAAA,aAAA8E,IAAA,GAAAlF,CAAA,CAAA2D,QAAA,SAAA4B,MAAA,CAAAvF,CAAA,CAAA2D,QAAA,qBAAArD,CAAA,YAAAsC,KAAA,qDAAAsC,IAAA,GAAAlF,CAAA,CAAA4D,UAAA,SAAA2B,MAAA,CAAAvF,CAAA,CAAA4D,UAAA,YAAAR,MAAA,WAAAA,OAAA7D,CAAA,EAAAD,CAAA,aAAAE,CAAA,QAAAsE,UAAA,CAAAM,MAAA,MAAA5E,CAAA,SAAAA,CAAA,QAAAK,CAAA,QAAAiE,UAAA,CAAAtE,CAAA,OAAAK,CAAA,CAAA6D,MAAA,SAAAwB,IAAA,IAAAvF,CAAA,CAAAyB,IAAA,CAAAvB,CAAA,wBAAAqF,IAAA,GAAArF,CAAA,CAAA+D,UAAA,QAAA5D,CAAA,GAAAH,CAAA,aAAAG,CAAA,iBAAAT,CAAA,mBAAAA,CAAA,KAAAS,CAAA,CAAA0D,MAAA,IAAApE,CAAA,IAAAA,CAAA,IAAAU,CAAA,CAAA4D,UAAA,KAAA5D,CAAA,cAAAE,CAAA,GAAAF,CAAA,GAAAA,CAAA,CAAAiE,UAAA,cAAA/D,CAAA,CAAAgB,IAAA,GAAA3B,CAAA,EAAAW,CAAA,CAAAiB,GAAA,GAAA7B,CAAA,EAAAU,CAAA,SAAA8C,MAAA,gBAAAS,IAAA,GAAAvD,CAAA,CAAA4D,UAAA,EAAAnC,CAAA,SAAA+D,QAAA,CAAAtF,CAAA,MAAAsF,QAAA,WAAAA,SAAAjG,CAAA,EAAAD,CAAA,oBAAAC,CAAA,CAAA2B,IAAA,QAAA3B,CAAA,CAAA4B,GAAA,qBAAA5B,CAAA,CAAA2B,IAAA,mBAAA3B,CAAA,CAAA2B,IAAA,QAAAqC,IAAA,GAAAhE,CAAA,CAAA4B,GAAA,gBAAA5B,CAAA,CAAA2B,IAAA,SAAAoE,IAAA,QAAAnE,GAAA,GAAA5B,CAAA,CAAA4B,GAAA,OAAA2B,MAAA,kBAAAS,IAAA,yBAAAhE,CAAA,CAAA2B,IAAA,IAAA5B,CAAA,UAAAiE,IAAA,GAAAjE,CAAA,GAAAmC,CAAA,KAAAgE,MAAA,WAAAA,OAAAlG,CAAA,aAAAD,CAAA,QAAAwE,UAAA,CAAAM,MAAA,MAAA9E,CAAA,SAAAA,CAAA,QAAAE,CAAA,QAAAsE,UAAA,CAAAxE,CAAA,OAAAE,CAAA,CAAAoE,UAAA,KAAArE,CAAA,cAAAiG,QAAA,CAAAhG,CAAA,CAAAyE,UAAA,EAAAzE,CAAA,CAAAqE,QAAA,GAAAG,aAAA,CAAAxE,CAAA,GAAAiC,CAAA,yBAAAiE,OAAAnG,CAAA,aAAAD,CAAA,QAAAwE,UAAA,CAAAM,MAAA,MAAA9E,CAAA,SAAAA,CAAA,QAAAE,CAAA,QAAAsE,UAAA,CAAAxE,CAAA,OAAAE,CAAA,CAAAkE,MAAA,KAAAnE,CAAA,QAAAI,CAAA,GAAAH,CAAA,CAAAyE,UAAA,kBAAAtE,CAAA,CAAAuB,IAAA,QAAArB,CAAA,GAAAF,CAAA,CAAAwB,GAAA,EAAA6C,aAAA,CAAAxE,CAAA,YAAAK,CAAA,gBAAA+C,KAAA,8BAAA+C,aAAA,WAAAA,cAAArG,CAAA,EAAAE,CAAA,EAAAG,CAAA,gBAAAoD,QAAA,KAAA5C,QAAA,EAAA6B,MAAA,CAAA1C,CAAA,GAAAgE,UAAA,EAAA9D,CAAA,EAAAgE,OAAA,EAAA7D,CAAA,oBAAAmD,MAAA,UAAA3B,GAAA,GAAA5B,CAAA,GAAAkC,CAAA,OAAAnC,CAAA;AAAA,SAAAsG,mBAAAC,GAAA,EAAArD,OAAA,EAAAsD,MAAA,EAAAC,KAAA,EAAAC,MAAA,EAAAC,GAAA,EAAA9E,GAAA,cAAA+E,IAAA,GAAAL,GAAA,CAAAI,GAAA,EAAA9E,GAAA,OAAApB,KAAA,GAAAmG,IAAA,CAAAnG,KAAA,WAAAoG,KAAA,IAAAL,MAAA,CAAAK,KAAA,iBAAAD,IAAA,CAAArD,IAAA,IAAAL,OAAA,CAAAzC,KAAA,YAAA+E,OAAA,CAAAtC,OAAA,CAAAzC,KAAA,EAAA2C,IAAA,CAAAqD,KAAA,EAAAC,MAAA;AAAA,SAAAI,kBAAAC,EAAA,6BAAAC,IAAA,SAAAC,IAAA,GAAAC,SAAA,aAAA1B,OAAA,WAAAtC,OAAA,EAAAsD,MAAA,QAAAD,GAAA,GAAAQ,EAAA,CAAAI,KAAA,CAAAH,IAAA,EAAAC,IAAA,YAAAR,MAAAhG,KAAA,IAAA6F,kBAAA,CAAAC,GAAA,EAAArD,OAAA,EAAAsD,MAAA,EAAAC,KAAA,EAAAC,MAAA,UAAAjG,KAAA,cAAAiG,OAAAU,GAAA,IAAAd,kBAAA,CAAAC,GAAA,EAAArD,OAAA,EAAAsD,MAAA,EAAAC,KAAA,EAAAC,MAAA,WAAAU,GAAA,KAAAX,KAAA,CAAAY,SAAA;AAAA,SAAAC,gBAAAC,QAAA,EAAAC,WAAA,UAAAD,QAAA,YAAAC,WAAA,eAAAzD,SAAA;AAAA,SAAA0D,kBAAAC,MAAA,EAAAC,KAAA,aAAAjH,CAAA,MAAAA,CAAA,GAAAiH,KAAA,CAAA7C,MAAA,EAAApE,CAAA,UAAAkH,UAAA,GAAAD,KAAA,CAAAjH,CAAA,GAAAkH,UAAA,CAAAzG,UAAA,GAAAyG,UAAA,CAAAzG,UAAA,WAAAyG,UAAA,CAAAxG,YAAA,wBAAAwG,UAAA,EAAAA,UAAA,CAAAvG,QAAA,SAAAlB,MAAA,CAAAK,cAAA,CAAAkH,MAAA,EAAAG,cAAA,CAAAD,UAAA,CAAAjB,GAAA,GAAAiB,UAAA;AAAA,SAAAE,aAAAN,WAAA,EAAAO,UAAA,EAAAC,WAAA,QAAAD,UAAA,EAAAN,iBAAA,CAAAD,WAAA,CAAApH,SAAA,EAAA2H,UAAA,OAAAC,WAAA,EAAAP,iBAAA,CAAAD,WAAA,EAAAQ,WAAA,GAAA7H,MAAA,CAAAK,cAAA,CAAAgH,WAAA,iBAAAnG,QAAA,mBAAAmG,WAAA;AAAA,SAAAK,eAAAhG,GAAA,QAAA8E,GAAA,GAAAsB,YAAA,CAAApG,GAAA,oBAAAoB,OAAA,CAAA0D,GAAA,iBAAAA,GAAA,GAAAuB,MAAA,CAAAvB,GAAA;AAAA,SAAAsB,aAAAE,KAAA,EAAAC,IAAA,QAAAnF,OAAA,CAAAkF,KAAA,kBAAAA,KAAA,kBAAAA,KAAA,MAAAE,IAAA,GAAAF,KAAA,CAAAxH,MAAA,CAAA2H,WAAA,OAAAD,IAAA,KAAAhB,SAAA,QAAAkB,GAAA,GAAAF,IAAA,CAAAvG,IAAA,CAAAqG,KAAA,EAAAC,IAAA,oBAAAnF,OAAA,CAAAsF,GAAA,uBAAAA,GAAA,YAAAxE,SAAA,4DAAAqE,IAAA,gBAAAF,MAAA,GAAAM,MAAA,EAAAL,KAAA;AADyC;AACzC,IAAMO,CAAC,GAAG,IAAID,0DAAO,CAAC,CAAC;AAAC,IAElBE,WAAW;EACb,SAAAA,YAAYC,OAAO,EAAE;IAAAtB,eAAA,OAAAqB,WAAA;IACjBxI,MAAM,CAAC0I,gBAAgB,CAAC,IAAI,EAAE;MAC1B3D,IAAI,EAAE;QACF/D,UAAU,EAAE,IAAI;QAChBC,YAAY,EAAE,KAAK;QACnBX,KAAK,EAAEmI;MACX;IACJ,CAAC,CAAC;EACN;EAACd,YAAA,CAAAa,WAAA;IAAAhC,GAAA;IAAAmC,GAAA,EACD,SAAAA,IAAA,EAAuB;MAAA,IAAAC,KAAA;MACnB,OAAOjC,iBAAA,eAAA/G,mBAAA,GAAAoF,IAAA,CAAC,SAAA6D,QAAA;QAAA,IAAAC,OAAA;QAAA,OAAAlJ,mBAAA,GAAAuB,IAAA,UAAA4H,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAvD,IAAA,GAAAuD,QAAA,CAAAlF,IAAA;YAAA;cAAAkF,QAAA,CAAAvD,IAAA;cAAAuD,QAAA,CAAAlF,IAAA;cAAA,OAEsByE,CAAC,CAACU,gBAAgB,CAACL,KAAI,CAAC7D,IAAI,CAAC;YAAA;cAA7C+D,OAAO,GAAAE,QAAA,CAAAxF,IAAA;cAAA,OAAAwF,QAAA,CAAArF,MAAA,WACN,CAACmF,OAAO,CAAC/D,IAAI,EAAE+D,OAAO,CAACI,KAAK,EAAEJ,OAAO,CAACK,KAAK,EAAEL,OAAO,CAACM,KAAK,EAAEN,OAAO,CAACO,SAAS,CAAC;YAAA;cAAAL,QAAA,CAAAvD,IAAA;cAAAuD,QAAA,CAAAM,EAAA,GAAAN,QAAA;cAGrFO,OAAO,CAACC,GAAG,CAAC,UAAU,EAAAR,QAAA,CAAAM,EAAO,CAAC;YAAC;YAAA;cAAA,OAAAN,QAAA,CAAApD,IAAA;UAAA;QAAA,GAAAiD,OAAA;MAAA,CAEtC,GAAE,CAAC;IACR;EAAC;IAAArC,GAAA;IAAAmC,GAAA,EACD,SAAAA,IAAA,EAAqB;MAAA,IAAAc,MAAA;MACjB,OAAO9C,iBAAA,eAAA/G,mBAAA,GAAAoF,IAAA,CAAC,SAAA0E,SAAA;QAAA,IAAAC,gBAAA,EAAAb,OAAA,EAAAc,SAAA,EAAAC,aAAA,EAAAC,SAAA,EAAAC,KAAA,EAAAtB,OAAA;QAAA,OAAA7I,mBAAA,GAAAuB,IAAA,UAAA6I,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAxE,IAAA,GAAAwE,SAAA,CAAAnG,IAAA;YAAA;cAAAmG,SAAA,CAAAxE,IAAA;cAEMkE,gBAAgB,GAAG,EAAE;cAAAM,SAAA,CAAAnG,IAAA;cAAA,OACLyE,CAAC,CAAC2B,uBAAuB,CAACT,MAAI,CAAC1E,IAAI,CAAC;YAAA;cAApD+D,OAAO,GAAAmB,SAAA,CAAAzG,IAAA;cAAAyG,SAAA,CAAAnG,IAAA;cAAA,OACWyE,CAAC,CAAC4B,QAAQ,CAACrB,OAAO,CAACsB,eAAe,CAACC,GAAG,CAAC;YAAA;cAAzDT,SAAS,GAAAK,SAAA,CAAAzG,IAAA;cACTqG,aAAa,GAAGD,SAAS,CAACU,KAAK,CAACC,UAAU;cAAAT,SAAA,GAAAU,0BAAA,CAC1BX,aAAa;cAAA;gBAAnC,KAAAC,SAAA,CAAA/H,CAAA,MAAAgI,KAAA,GAAAD,SAAA,CAAA5J,CAAA,IAAAkD,IAAA,GAAqC;kBAA1BqF,OAAO,GAAAsB,KAAA,CAAAzJ,KAAA;kBACdqJ,gBAAgB,CAACrF,IAAI,CAACmE,OAAO,CAACK,OAAO,CAAC/D,IAAI,CAAC;gBAC/C;cAAC,SAAAkC,GAAA;gBAAA6C,SAAA,CAAAjK,CAAA,CAAAoH,GAAA;cAAA;gBAAA6C,SAAA,CAAAhI,CAAA;cAAA;cAAA,OAAAmI,SAAA,CAAAtG,MAAA,WACMgG,gBAAgB;YAAA;cAAAM,SAAA,CAAAxE,IAAA;cAAAwE,SAAA,CAAAX,EAAA,GAAAW,SAAA;cAGvBV,OAAO,CAACC,GAAG,CAAC,UAAU,EAAAS,SAAA,CAAAX,EAAO,CAAC;YAAC;YAAA;cAAA,OAAAW,SAAA,CAAArE,IAAA;UAAA;QAAA,GAAA8D,QAAA;MAAA,CAEtC,GAAE,CAAC;IACR;EAAC;IAAAlD,GAAA;IAAAmC,GAAA,EACD,SAAAA,IAAA,EAAa;MACT,OAAOhC,iBAAA,eAAA/G,mBAAA,GAAAoF,IAAA,CAAC,SAAAyF,SAAA;QAAA,OAAA7K,mBAAA,GAAAuB,IAAA,UAAAuJ,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAlF,IAAA,GAAAkF,SAAA,CAAA7G,IAAA;YAAA;cACJ,IAAI;gBACA;cAAA,CACH,CACD,OAAO4C,KAAK,EAAE;gBACV6C,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE9C,KAAK,CAAC;cACjC;YAAC;YAAA;cAAA,OAAAiE,SAAA,CAAA/E,IAAA;UAAA;QAAA,GAAA6E,QAAA;MAAA,CACJ,GAAE,CAAC;IACR;EAAC;EAAA,OAAAjC,WAAA;AAAA,KAGL;AACA;AACA;AAEA,IAAMoC,KAAK,GAAG,IAAIpC,WAAW,CAAC,OAAO,CAAC;AAEtC7B,iBAAA,eAAA/G,mBAAA,GAAAoF,IAAA,CAAC,SAAA6F,SAAA;EAAA,IAAAC,WAAA,EAAAC,qBAAA,EAAAC,QAAA,EAAAC,KAAA;EAAA,OAAArL,mBAAA,GAAAuB,IAAA,UAAA+J,UAAAC,SAAA;IAAA,kBAAAA,SAAA,CAAA1F,IAAA,GAAA0F,SAAA,CAAArH,IAAA;MAAA;QAAAqH,SAAA,CAAA1F,IAAA;QAAA0F,SAAA,CAAArH,IAAA;QAAA,OAGiC8G,KAAK,CAACQ,cAAc;MAAA;QAAxCN,WAAW,GAAAK,SAAA,CAAA3H,IAAA;QACXuH,qBAAqB,GAAGD,WAAW,CAACO,MAAM,CAAC,UAAC5C,OAAO;UAAA,OAAKA,OAAO,KAAK,UAAU;QAAA,EAAC,CAAC6C,IAAI,CAAC,EAAE,CAAC;QACxFN,QAAQ,GAAG,IAAIxC,WAAW,CAACuC,qBAAqB,CAAC;QAAAI,SAAA,CAAArH,IAAA;QAAA,OACnCkH,QAAQ,CAACO,gBAAgB;MAAA;QAAvCN,KAAK,GAAAE,SAAA,CAAA3H,IAAA;QACX+F,OAAO,CAACC,GAAG,CAACyB,KAAK,CAAC;QAACE,SAAA,CAAArH,IAAA;QAAA;MAAA;QAAAqH,SAAA,CAAA1F,IAAA;QAAA0F,SAAA,CAAA7B,EAAA,GAAA6B,SAAA;QAGnB5B,OAAO,CAACC,GAAG,CAAA2B,SAAA,CAAA7B,EAAE,CAAC;MAAC;MAAA;QAAA,OAAA6B,SAAA,CAAAvF,IAAA;IAAA;EAAA,GAAAiF,QAAA;AAAA,CAEtB,GAAE,CAAC,C","sources":["webpack://pk/./node_modules/axios/index.js","webpack://pk/./node_modules/axios/lib/adapters/xhr.js","webpack://pk/./node_modules/axios/lib/axios.js","webpack://pk/./node_modules/axios/lib/cancel/Cancel.js","webpack://pk/./node_modules/axios/lib/cancel/CancelToken.js","webpack://pk/./node_modules/axios/lib/cancel/isCancel.js","webpack://pk/./node_modules/axios/lib/core/Axios.js","webpack://pk/./node_modules/axios/lib/core/InterceptorManager.js","webpack://pk/./node_modules/axios/lib/core/buildFullPath.js","webpack://pk/./node_modules/axios/lib/core/createError.js","webpack://pk/./node_modules/axios/lib/core/dispatchRequest.js","webpack://pk/./node_modules/axios/lib/core/enhanceError.js","webpack://pk/./node_modules/axios/lib/core/mergeConfig.js","webpack://pk/./node_modules/axios/lib/core/settle.js","webpack://pk/./node_modules/axios/lib/core/transformData.js","webpack://pk/./node_modules/axios/lib/defaults.js","webpack://pk/./node_modules/axios/lib/env/data.js","webpack://pk/./node_modules/axios/lib/helpers/bind.js","webpack://pk/./node_modules/axios/lib/helpers/buildURL.js","webpack://pk/./node_modules/axios/lib/helpers/combineURLs.js","webpack://pk/./node_modules/axios/lib/helpers/cookies.js","webpack://pk/./node_modules/axios/lib/helpers/isAbsoluteURL.js","webpack://pk/./node_modules/axios/lib/helpers/isAxiosError.js","webpack://pk/./node_modules/axios/lib/helpers/isURLSameOrigin.js","webpack://pk/./node_modules/axios/lib/helpers/normalizeHeaderName.js","webpack://pk/./node_modules/axios/lib/helpers/parseHeaders.js","webpack://pk/./node_modules/axios/lib/helpers/spread.js","webpack://pk/./node_modules/axios/lib/helpers/validator.js","webpack://pk/./node_modules/axios/lib/utils.js","webpack://pk/./node_modules/clone/clone.js","webpack://pk/./node_modules/events/events.js","webpack://pk/./node_modules/node-cache/index.js","webpack://pk/./node_modules/node-cache/lib/node_cache.js","webpack://pk/ignored|C:\\Users\\uwu\\Documents\\EBooks\\Importantes\\Programming\\JavaScript\\Seção Exercício\\ES6 I\\pk\\node_modules\\clean-stack|os","webpack://pk/./node_modules/aggregate-error/index.js","webpack://pk/./node_modules/clean-stack/index.js","webpack://pk/./node_modules/escape-string-regexp/index.js","webpack://pk/./node_modules/indent-string/index.js","webpack://pk/./node_modules/p-map/index.js","webpack://pk/./node_modules/pokedex-promise-v2/dist/src/index.js","webpack://pk/./node_modules/pokedex-promise-v2/dist/src/interfaces/PokeAPIOptions.js","webpack://pk/./node_modules/pokedex-promise-v2/dist/src/utils/ErrorHandler.js","webpack://pk/./node_modules/pokedex-promise-v2/dist/src/utils/Getter.js","webpack://pk/webpack/bootstrap","webpack://pk/webpack/runtime/define property getters","webpack://pk/webpack/runtime/hasOwnProperty shorthand","webpack://pk/webpack/runtime/make namespace object","webpack://pk/./src/pokemon-server.js"],"sourcesContent":["module.exports = require('./lib/axios');","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar cookies = require('./../helpers/cookies');\nvar buildURL = require('./../helpers/buildURL');\nvar buildFullPath = require('../core/buildFullPath');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\nvar defaults = require('../defaults');\nvar Cancel = require('../cancel/Cancel');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n    var responseType = config.responseType;\n    var onCanceled;\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !responseType || responseType === 'text' ||  responseType === 'json' ?\n        request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n      var transitional = config.transitional || defaults.transitional;\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(createError(\n        timeoutErrorMessage,\n        config,\n        transitional.clarifyTimeoutError ? 'ETIMEDOUT' : 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken || config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = function(cancel) {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || (cancel && cancel.type) ? new Cancel('canceled') : cancel);\n        request.abort();\n        request = null;\n      };\n\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n      if (config.signal) {\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    if (!requestData) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar mergeConfig = require('./core/mergeConfig');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\naxios.VERSION = require('./env/data').version;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\n// Expose isAxiosError\naxios.isAxiosError = require('./helpers/isAxiosError');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n","'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n","'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n\n  // eslint-disable-next-line func-names\n  this.promise.then(function(cancel) {\n    if (!token._listeners) return;\n\n    var i;\n    var l = token._listeners.length;\n\n    for (i = 0; i < l; i++) {\n      token._listeners[i](cancel);\n    }\n    token._listeners = null;\n  });\n\n  // eslint-disable-next-line func-names\n  this.promise.then = function(onfulfilled) {\n    var _resolve;\n    // eslint-disable-next-line func-names\n    var promise = new Promise(function(resolve) {\n      token.subscribe(resolve);\n      _resolve = resolve;\n    }).then(onfulfilled);\n\n    promise.cancel = function reject() {\n      token.unsubscribe(_resolve);\n    };\n\n    return promise;\n  };\n\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Subscribe to the cancel signal\n */\n\nCancelToken.prototype.subscribe = function subscribe(listener) {\n  if (this.reason) {\n    listener(this.reason);\n    return;\n  }\n\n  if (this._listeners) {\n    this._listeners.push(listener);\n  } else {\n    this._listeners = [listener];\n  }\n};\n\n/**\n * Unsubscribe from the cancel signal\n */\n\nCancelToken.prototype.unsubscribe = function unsubscribe(listener) {\n  if (!this._listeners) {\n    return;\n  }\n  var index = this._listeners.indexOf(listener);\n  if (index !== -1) {\n    this._listeners.splice(index, 1);\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar buildURL = require('../helpers/buildURL');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\nvar mergeConfig = require('./mergeConfig');\nvar validator = require('../helpers/validator');\n\nvar validators = validator.validators;\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = arguments[1] || {};\n    config.url = arguments[0];\n  } else {\n    config = config || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  var transitional = config.transitional;\n\n  if (transitional !== undefined) {\n    validator.assertOptions(transitional, {\n      silentJSONParsing: validators.transitional(validators.boolean),\n      forcedJSONParsing: validators.transitional(validators.boolean),\n      clarifyTimeoutError: validators.transitional(validators.boolean)\n    }, false);\n  }\n\n  // filter out skipped interceptors\n  var requestInterceptorChain = [];\n  var synchronousRequestInterceptors = true;\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n      return;\n    }\n\n    synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n    requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var responseInterceptorChain = [];\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var promise;\n\n  if (!synchronousRequestInterceptors) {\n    var chain = [dispatchRequest, undefined];\n\n    Array.prototype.unshift.apply(chain, requestInterceptorChain);\n    chain = chain.concat(responseInterceptorChain);\n\n    promise = Promise.resolve(config);\n    while (chain.length) {\n      promise = promise.then(chain.shift(), chain.shift());\n    }\n\n    return promise;\n  }\n\n\n  var newConfig = config;\n  while (requestInterceptorChain.length) {\n    var onFulfilled = requestInterceptorChain.shift();\n    var onRejected = requestInterceptorChain.shift();\n    try {\n      newConfig = onFulfilled(newConfig);\n    } catch (error) {\n      onRejected(error);\n      break;\n    }\n  }\n\n  try {\n    promise = dispatchRequest(newConfig);\n  } catch (error) {\n    return Promise.reject(error);\n  }\n\n  while (responseInterceptorChain.length) {\n    promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected, options) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected,\n    synchronous: options ? options.synchronous : false,\n    runWhen: options ? options.runWhen : null\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n","'use strict';\n\nvar isAbsoluteURL = require('../helpers/isAbsoluteURL');\nvar combineURLs = require('../helpers/combineURLs');\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n * @returns {string} The combined full path\n */\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n};\n","'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\nvar Cancel = require('../cancel/Cancel');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new Cancel('canceled');\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n","'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n\n  error.request = request;\n  error.response = response;\n  error.isAxiosError = true;\n\n  error.toJSON = function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code,\n      status: this.response && this.response.status ? this.response.status : null\n    };\n  };\n  return error;\n};\n","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  function getMergedValue(target, source) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge(target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(config1[prop], config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(undefined, config2[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(undefined, config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(prop) {\n    if (prop in config2) {\n      return getMergedValue(config1[prop], config2[prop]);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  var mergeMap = {\n    'url': valueFromConfig2,\n    'method': valueFromConfig2,\n    'data': valueFromConfig2,\n    'baseURL': defaultToConfig2,\n    'transformRequest': defaultToConfig2,\n    'transformResponse': defaultToConfig2,\n    'paramsSerializer': defaultToConfig2,\n    'timeout': defaultToConfig2,\n    'timeoutMessage': defaultToConfig2,\n    'withCredentials': defaultToConfig2,\n    'adapter': defaultToConfig2,\n    'responseType': defaultToConfig2,\n    'xsrfCookieName': defaultToConfig2,\n    'xsrfHeaderName': defaultToConfig2,\n    'onUploadProgress': defaultToConfig2,\n    'onDownloadProgress': defaultToConfig2,\n    'decompress': defaultToConfig2,\n    'maxContentLength': defaultToConfig2,\n    'maxBodyLength': defaultToConfig2,\n    'transport': defaultToConfig2,\n    'httpAgent': defaultToConfig2,\n    'httpsAgent': defaultToConfig2,\n    'cancelToken': defaultToConfig2,\n    'socketPath': defaultToConfig2,\n    'responseEncoding': defaultToConfig2,\n    'validateStatus': mergeDirectKeys\n  };\n\n  utils.forEach(Object.keys(config1).concat(Object.keys(config2)), function computeConfigValue(prop) {\n    var merge = mergeMap[prop] || mergeDeepProperties;\n    var configValue = merge(prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n};\n","'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar defaults = require('./../defaults');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  var context = this || defaults;\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(context, data, headers);\n  });\n\n  return data;\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar normalizeHeaderName = require('./helpers/normalizeHeaderName');\nvar enhanceError = require('./core/enhanceError');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('./adapters/xhr');\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = require('./adapters/http');\n  }\n  return adapter;\n}\n\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nvar defaults = {\n\n  transitional: {\n    silentJSONParsing: true,\n    forcedJSONParsing: true,\n    clarifyTimeoutError: false\n  },\n\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data) || (headers && headers['Content-Type'] === 'application/json')) {\n      setContentTypeIfUnset(headers, 'application/json');\n      return stringifySafely(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    var transitional = this.transitional || defaults.transitional;\n    var silentJSONParsing = transitional && transitional.silentJSONParsing;\n    var forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    var strictJSONParsing = !silentJSONParsing && this.responseType === 'json';\n\n    if (strictJSONParsing || (forcedJSONParsing && utils.isString(data) && data.length)) {\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw enhanceError(e, this, 'E_JSON_PARSE');\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*'\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n","module.exports = {\n  \"version\": \"0.24.0\"\n};","'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n","'use strict';\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nmodule.exports = function isAxiosError(payload) {\n  return (typeof payload === 'object') && (payload.isAxiosError === true);\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n","'use strict';\n\nvar VERSION = require('../env/data').version;\n\nvar validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach(function(type, i) {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nvar deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return function(value, opt, opts) {\n    if (validator === false) {\n      throw new Error(formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')));\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new TypeError('options must be an object');\n  }\n  var keys = Object.keys(options);\n  var i = keys.length;\n  while (i-- > 0) {\n    var opt = keys[i];\n    var validator = schema[opt];\n    if (validator) {\n      var value = options[opt];\n      var result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new TypeError('option ' + opt + ' must be ' + result);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw Error('Unknown option ' + opt);\n    }\n  }\n}\n\nmodule.exports = {\n  assertOptions: assertOptions,\n  validators: validators\n};\n","'use strict';\n\nvar bind = require('./helpers/bind');\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {Object} val The value to test\n * @return {boolean} True if value is a plain Object, otherwise false\n */\nfunction isPlainObject(val) {\n  if (toString.call(val) !== '[object Object]') {\n    return false;\n  }\n\n  var prototype = Object.getPrototypeOf(val);\n  return prototype === null || prototype === Object.prototype;\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.trim ? str.trim() : str.replace(/^\\s+|\\s+$/g, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\n      result[key] = merge(result[key], val);\n    } else if (isPlainObject(val)) {\n      result[key] = merge({}, val);\n    } else if (isArray(val)) {\n      result[key] = val.slice();\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n * @return {string} content value without BOM\n */\nfunction stripBOM(content) {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isPlainObject: isPlainObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim,\n  stripBOM: stripBOM\n};\n","var clone = (function() {\n'use strict';\n\nfunction _instanceof(obj, type) {\n  return type != null && obj instanceof type;\n}\n\nvar nativeMap;\ntry {\n  nativeMap = Map;\n} catch(_) {\n  // maybe a reference error because no `Map`. Give it a dummy value that no\n  // value will ever be an instanceof.\n  nativeMap = function() {};\n}\n\nvar nativeSet;\ntry {\n  nativeSet = Set;\n} catch(_) {\n  nativeSet = function() {};\n}\n\nvar nativePromise;\ntry {\n  nativePromise = Promise;\n} catch(_) {\n  nativePromise = function() {};\n}\n\n/**\n * Clones (copies) an Object using deep copying.\n *\n * This function supports circular references by default, but if you are certain\n * there are no circular references in your object, you can save some CPU time\n * by calling clone(obj, false).\n *\n * Caution: if `circular` is false and `parent` contains circular references,\n * your program may enter an infinite loop and crash.\n *\n * @param `parent` - the object to be cloned\n * @param `circular` - set to true if the object to be cloned may contain\n *    circular references. (optional - true by default)\n * @param `depth` - set to a number if the object is only to be cloned to\n *    a particular depth. (optional - defaults to Infinity)\n * @param `prototype` - sets the prototype to be used when cloning an object.\n *    (optional - defaults to parent prototype).\n * @param `includeNonEnumerable` - set to true if the non-enumerable properties\n *    should be cloned as well. Non-enumerable properties on the prototype\n *    chain will be ignored. (optional - false by default)\n*/\nfunction clone(parent, circular, depth, prototype, includeNonEnumerable) {\n  if (typeof circular === 'object') {\n    depth = circular.depth;\n    prototype = circular.prototype;\n    includeNonEnumerable = circular.includeNonEnumerable;\n    circular = circular.circular;\n  }\n  // maintain two arrays for circular references, where corresponding parents\n  // and children have the same index\n  var allParents = [];\n  var allChildren = [];\n\n  var useBuffer = typeof Buffer != 'undefined';\n\n  if (typeof circular == 'undefined')\n    circular = true;\n\n  if (typeof depth == 'undefined')\n    depth = Infinity;\n\n  // recurse this function so we don't reset allParents and allChildren\n  function _clone(parent, depth) {\n    // cloning null always returns null\n    if (parent === null)\n      return null;\n\n    if (depth === 0)\n      return parent;\n\n    var child;\n    var proto;\n    if (typeof parent != 'object') {\n      return parent;\n    }\n\n    if (_instanceof(parent, nativeMap)) {\n      child = new nativeMap();\n    } else if (_instanceof(parent, nativeSet)) {\n      child = new nativeSet();\n    } else if (_instanceof(parent, nativePromise)) {\n      child = new nativePromise(function (resolve, reject) {\n        parent.then(function(value) {\n          resolve(_clone(value, depth - 1));\n        }, function(err) {\n          reject(_clone(err, depth - 1));\n        });\n      });\n    } else if (clone.__isArray(parent)) {\n      child = [];\n    } else if (clone.__isRegExp(parent)) {\n      child = new RegExp(parent.source, __getRegExpFlags(parent));\n      if (parent.lastIndex) child.lastIndex = parent.lastIndex;\n    } else if (clone.__isDate(parent)) {\n      child = new Date(parent.getTime());\n    } else if (useBuffer && Buffer.isBuffer(parent)) {\n      if (Buffer.allocUnsafe) {\n        // Node.js >= 4.5.0\n        child = Buffer.allocUnsafe(parent.length);\n      } else {\n        // Older Node.js versions\n        child = new Buffer(parent.length);\n      }\n      parent.copy(child);\n      return child;\n    } else if (_instanceof(parent, Error)) {\n      child = Object.create(parent);\n    } else {\n      if (typeof prototype == 'undefined') {\n        proto = Object.getPrototypeOf(parent);\n        child = Object.create(proto);\n      }\n      else {\n        child = Object.create(prototype);\n        proto = prototype;\n      }\n    }\n\n    if (circular) {\n      var index = allParents.indexOf(parent);\n\n      if (index != -1) {\n        return allChildren[index];\n      }\n      allParents.push(parent);\n      allChildren.push(child);\n    }\n\n    if (_instanceof(parent, nativeMap)) {\n      parent.forEach(function(value, key) {\n        var keyChild = _clone(key, depth - 1);\n        var valueChild = _clone(value, depth - 1);\n        child.set(keyChild, valueChild);\n      });\n    }\n    if (_instanceof(parent, nativeSet)) {\n      parent.forEach(function(value) {\n        var entryChild = _clone(value, depth - 1);\n        child.add(entryChild);\n      });\n    }\n\n    for (var i in parent) {\n      var attrs;\n      if (proto) {\n        attrs = Object.getOwnPropertyDescriptor(proto, i);\n      }\n\n      if (attrs && attrs.set == null) {\n        continue;\n      }\n      child[i] = _clone(parent[i], depth - 1);\n    }\n\n    if (Object.getOwnPropertySymbols) {\n      var symbols = Object.getOwnPropertySymbols(parent);\n      for (var i = 0; i < symbols.length; i++) {\n        // Don't need to worry about cloning a symbol because it is a primitive,\n        // like a number or string.\n        var symbol = symbols[i];\n        var descriptor = Object.getOwnPropertyDescriptor(parent, symbol);\n        if (descriptor && !descriptor.enumerable && !includeNonEnumerable) {\n          continue;\n        }\n        child[symbol] = _clone(parent[symbol], depth - 1);\n        if (!descriptor.enumerable) {\n          Object.defineProperty(child, symbol, {\n            enumerable: false\n          });\n        }\n      }\n    }\n\n    if (includeNonEnumerable) {\n      var allPropertyNames = Object.getOwnPropertyNames(parent);\n      for (var i = 0; i < allPropertyNames.length; i++) {\n        var propertyName = allPropertyNames[i];\n        var descriptor = Object.getOwnPropertyDescriptor(parent, propertyName);\n        if (descriptor && descriptor.enumerable) {\n          continue;\n        }\n        child[propertyName] = _clone(parent[propertyName], depth - 1);\n        Object.defineProperty(child, propertyName, {\n          enumerable: false\n        });\n      }\n    }\n\n    return child;\n  }\n\n  return _clone(parent, depth);\n}\n\n/**\n * Simple flat clone using prototype, accepts only objects, usefull for property\n * override on FLAT configuration object (no nested props).\n *\n * USE WITH CAUTION! This may not behave as you wish if you do not know how this\n * works.\n */\nclone.clonePrototype = function clonePrototype(parent) {\n  if (parent === null)\n    return null;\n\n  var c = function () {};\n  c.prototype = parent;\n  return new c();\n};\n\n// private utility functions\n\nfunction __objToStr(o) {\n  return Object.prototype.toString.call(o);\n}\nclone.__objToStr = __objToStr;\n\nfunction __isDate(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object Date]';\n}\nclone.__isDate = __isDate;\n\nfunction __isArray(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object Array]';\n}\nclone.__isArray = __isArray;\n\nfunction __isRegExp(o) {\n  return typeof o === 'object' && __objToStr(o) === '[object RegExp]';\n}\nclone.__isRegExp = __isRegExp;\n\nfunction __getRegExpFlags(re) {\n  var flags = '';\n  if (re.global) flags += 'g';\n  if (re.ignoreCase) flags += 'i';\n  if (re.multiline) flags += 'm';\n  return flags;\n}\nclone.__getRegExpFlags = __getRegExpFlags;\n\nreturn clone;\n})();\n\nif (typeof module === 'object' && module.exports) {\n  module.exports = clone;\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","/*\n * node-cache 5.1.2 ( 2020-07-01 )\n * https://github.com/node-cache/node-cache\n *\n * Released under the MIT license\n * https://github.com/node-cache/node-cache/blob/master/LICENSE\n *\n * Maintained by  (  )\n*/\n(function() {\n  var exports;\n\n  exports = module.exports = require('./lib/node_cache');\n\n  exports.version = '5.1.2';\n\n}).call(this);\n","/*\n * node-cache 5.1.2 ( 2020-07-01 )\n * https://github.com/node-cache/node-cache\n *\n * Released under the MIT license\n * https://github.com/node-cache/node-cache/blob/master/LICENSE\n *\n * Maintained by  (  )\n*/\n(function() {\n  var EventEmitter, NodeCache, clone,\n    splice = [].splice,\n    boundMethodCheck = function(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new Error('Bound instance method accessed before binding'); } },\n    indexOf = [].indexOf;\n\n  clone = require(\"clone\");\n\n  EventEmitter = require('events').EventEmitter;\n\n  // generate superclass\n  module.exports = NodeCache = (function() {\n    class NodeCache extends EventEmitter {\n      constructor(options = {}) {\n        super();\n        // ## get\n\n        // get a cached key and change the stats\n\n        // **Parameters:**\n\n        // * `key` ( String | Number ): cache key\n\n        // **Example:**\n\n        //\tmyCache.get \"myKey\", ( err, val )\n\n        this.get = this.get.bind(this);\n        // ## mget\n\n        // get multiple cached keys at once and change the stats\n\n        // **Parameters:**\n\n        // * `keys` ( String|Number[] ): an array of keys\n\n        // **Example:**\n\n        //\tmyCache.mget [ \"foo\", \"bar\" ]\n\n        this.mget = this.mget.bind(this);\n        // ## set\n\n        // set a cached key and change the stats\n\n        // **Parameters:**\n\n        // * `key` ( String | Number ): cache key\n        // * `value` ( Any ): A element to cache. If the option `option.forceString` is `true` the module trys to translate it to a serialized JSON\n        // * `[ ttl ]` ( Number | String ): ( optional ) The time to live in seconds.\n\n        // **Example:**\n\n        //\tmyCache.set \"myKey\", \"my_String Value\"\n\n        //\tmyCache.set \"myKey\", \"my_String Value\", 10\n\n        this.set = this.set.bind(this);\n        \n        // ## mset\n\n        // set multiple keys at once\n\n        // **Parameters:**\n\n        // * `keyValueSet` ( Object[] ): an array of object which includes key,value and ttl\n\n        // **Example:**\n\n        //\tmyCache.mset(\n        //\t\t[\n        //\t\t\t{\n        //\t\t\t\tkey: \"myKey\",\n        //\t\t\t\tval: \"myValue\",\n        //\t\t\t\tttl: [ttl in seconds]\n        //\t\t\t}\n        //\t\t])\n\n        this.mset = this.mset.bind(this);\n        // ## del\n\n        // remove keys\n\n        // **Parameters:**\n\n        // * `keys` ( String | Number | String|Number[] ): cache key to delete or a array of cache keys\n\n        // **Return**\n\n        // ( Number ): Number of deleted keys\n\n        // **Example:**\n\n        //\tmyCache.del( \"myKey\" )\n\n        this.del = this.del.bind(this);\n        // ## take\n\n        // get the cached value and remove the key from the cache.\n        // Equivalent to calling `get(key)` + `del(key)`.\n        // Useful for implementing `single use` mechanism such as OTP, where once a value is read it will become obsolete.\n\n        // **Parameters:**\n\n        // * `key` ( String | Number ): cache key\n\n        // **Example:**\n\n        //\tmyCache.take \"myKey\", ( err, val )\n\n        this.take = this.take.bind(this);\n        // ## ttl\n\n        // reset or redefine the ttl of a key. `ttl` = 0 means infinite lifetime.\n        // If `ttl` is not passed the default ttl is used.\n        // If `ttl` < 0 the key will be deleted.\n\n        // **Parameters:**\n\n        // * `key` ( String | Number ): cache key to reset the ttl value\n        // * `ttl` ( Number ): ( optional -> options.stdTTL || 0 ) The time to live in seconds\n\n        // **Return**\n\n        // ( Boolen ): key found and ttl set\n\n        // **Example:**\n\n        //\tmyCache.ttl( \"myKey\" ) // will set ttl to default ttl\n\n        //\tmyCache.ttl( \"myKey\", 1000 )\n\n        this.ttl = this.ttl.bind(this);\n        // ## getTtl\n\n        // receive the ttl of a key.\n\n        // **Parameters:**\n\n        // * `key` ( String | Number ): cache key to check the ttl value\n\n        // **Return**\n\n        // ( Number|undefined ): The timestamp in ms when the key will expire, 0 if it will never expire or undefined if it not exists\n\n        // **Example:**\n\n        //\tmyCache.getTtl( \"myKey\" )\n\n        this.getTtl = this.getTtl.bind(this);\n        // ## keys\n\n        // list all keys within this cache\n\n        // **Return**\n\n        // ( Array ): An array of all keys\n\n        // **Example:**\n\n        //     _keys = myCache.keys()\n\n        //     # [ \"foo\", \"bar\", \"fizz\", \"buzz\", \"anotherKeys\" ]\n\n        this.keys = this.keys.bind(this);\n        // ## has\n\n        // Check if a key is cached\n\n        // **Parameters:**\n\n        // * `key` ( String | Number ): cache key to check the ttl value\n\n        // **Return**\n\n        // ( Boolean ): A boolean that indicates if the key is cached\n\n        // **Example:**\n\n        //     _exists = myCache.has('myKey')\n\n        //     # true\n\n        this.has = this.has.bind(this);\n        // ## getStats\n\n        // get the stats\n\n        // **Parameters:**\n\n        // -\n\n        // **Return**\n\n        // ( Object ): Stats data\n\n        // **Example:**\n\n        //     myCache.getStats()\n        //     # {\n        //     # hits: 0,\n        //     # misses: 0,\n        //     # keys: 0,\n        //     # ksize: 0,\n        //     # vsize: 0\n        //     # }\n\n        this.getStats = this.getStats.bind(this);\n        // ## flushAll\n\n        // flush the whole data and reset the stats\n\n        // **Example:**\n\n        //     myCache.flushAll()\n\n        //     myCache.getStats()\n        //     # {\n        //     # hits: 0,\n        //     # misses: 0,\n        //     # keys: 0,\n        //     # ksize: 0,\n        //     # vsize: 0\n        //     # }\n\n        this.flushAll = this.flushAll.bind(this);\n        \n        // ## flushStats\n\n        // flush the stats and reset all counters to 0\n\n        // **Example:**\n\n        //     myCache.flushStats()\n\n        //     myCache.getStats()\n        //     # {\n        //     # hits: 0,\n        //     # misses: 0,\n        //     # keys: 0,\n        //     # ksize: 0,\n        //     # vsize: 0\n        //     # }\n\n        this.flushStats = this.flushStats.bind(this);\n        // ## close\n\n        // This will clear the interval timeout which is set on checkperiod option.\n\n        // **Example:**\n\n        //     myCache.close()\n\n        this.close = this.close.bind(this);\n        // ## _checkData\n\n        // internal housekeeping method.\n        // Check all the cached data and delete the invalid values\n        this._checkData = this._checkData.bind(this);\n        // ## _check\n\n        // internal method the check the value. If it's not valid any more delete it\n        this._check = this._check.bind(this);\n        // ## _isInvalidKey\n\n        // internal method to check if the type of a key is either `number` or `string`\n        this._isInvalidKey = this._isInvalidKey.bind(this);\n        // ## _wrap\n\n        // internal method to wrap a value in an object with some metadata\n        this._wrap = this._wrap.bind(this);\n        // ## _getValLength\n\n        // internal method to calculate the value length\n        this._getValLength = this._getValLength.bind(this);\n        // ## _error\n\n        // internal method to handle an error message\n        this._error = this._error.bind(this);\n        // ## _initErrors\n\n        // internal method to generate error message templates\n        this._initErrors = this._initErrors.bind(this);\n        this.options = options;\n        this._initErrors();\n        // container for cached data\n        this.data = {};\n        // module options\n        this.options = Object.assign({\n          // convert all elements to string\n          forceString: false,\n          // used standard size for calculating value size\n          objectValueSize: 80,\n          promiseValueSize: 80,\n          arrayValueSize: 40,\n          // standard time to live in seconds. 0 = infinity;\n          stdTTL: 0,\n          // time in seconds to check all data and delete expired keys\n          checkperiod: 600,\n          // en/disable cloning of variables. If `true` you'll get a copy of the cached variable. If `false` you'll save and get just the reference\n          useClones: true,\n          // whether values should be deleted automatically at expiration\n          deleteOnExpire: true,\n          // enable legacy callbacks\n          enableLegacyCallbacks: false,\n          // max amount of keys that are being stored\n          maxKeys: -1\n        }, this.options);\n        // generate functions with callbacks (legacy)\n        if (this.options.enableLegacyCallbacks) {\n          console.warn(\"WARNING! node-cache legacy callback support will drop in v6.x\");\n          [\"get\", \"mget\", \"set\", \"del\", \"ttl\", \"getTtl\", \"keys\", \"has\"].forEach((methodKey) => {\n            var oldMethod;\n            // reference real function\n            oldMethod = this[methodKey];\n            this[methodKey] = function(...args) {\n              var cb, err, ref, res;\n              ref = args, [...args] = ref, [cb] = splice.call(args, -1);\n              // return a callback if cb is defined and a function\n              if (typeof cb === \"function\") {\n                try {\n                  res = oldMethod(...args);\n                  cb(null, res);\n                } catch (error1) {\n                  err = error1;\n                  cb(err);\n                }\n              } else {\n                return oldMethod(...args, cb);\n              }\n            };\n          });\n        }\n        // statistics container\n        this.stats = {\n          hits: 0,\n          misses: 0,\n          keys: 0,\n          ksize: 0,\n          vsize: 0\n        };\n        // pre allocate valid keytypes array\n        this.validKeyTypes = [\"string\", \"number\"];\n        // initalize checking period\n        this._checkData();\n        return;\n      }\n\n      get(key) {\n        var _ret, err;\n        boundMethodCheck(this, NodeCache);\n        // handle invalid key types\n        if ((err = this._isInvalidKey(key)) != null) {\n          throw err;\n        }\n        // get data and incremet stats\n        if ((this.data[key] != null) && this._check(key, this.data[key])) {\n          this.stats.hits++;\n          _ret = this._unwrap(this.data[key]);\n          // return data\n          return _ret;\n        } else {\n          // if not found return undefined\n          this.stats.misses++;\n          return void 0;\n        }\n      }\n\n      mget(keys) {\n        var _err, err, i, key, len, oRet;\n        boundMethodCheck(this, NodeCache);\n        // convert a string to an array of one key\n        if (!Array.isArray(keys)) {\n          _err = this._error(\"EKEYSTYPE\");\n          throw _err;\n        }\n        // define return\n        oRet = {};\n        for (i = 0, len = keys.length; i < len; i++) {\n          key = keys[i];\n          // handle invalid key types\n          if ((err = this._isInvalidKey(key)) != null) {\n            throw err;\n          }\n          // get data and increment stats\n          if ((this.data[key] != null) && this._check(key, this.data[key])) {\n            this.stats.hits++;\n            oRet[key] = this._unwrap(this.data[key]);\n          } else {\n            // if not found return a error\n            this.stats.misses++;\n          }\n        }\n        // return all found keys\n        return oRet;\n      }\n\n      set(key, value, ttl) {\n        var _err, err, existent;\n        boundMethodCheck(this, NodeCache);\n        // check if cache is overflowing\n        if (this.options.maxKeys > -1 && this.stats.keys >= this.options.maxKeys) {\n          _err = this._error(\"ECACHEFULL\");\n          throw _err;\n        }\n        // force the data to string\n        if (this.options.forceString && !typeof value === \"string\") {\n          value = JSON.stringify(value);\n        }\n        // set default ttl if not passed\n        if (ttl == null) {\n          ttl = this.options.stdTTL;\n        }\n        // handle invalid key types\n        if ((err = this._isInvalidKey(key)) != null) {\n          throw err;\n        }\n        // internal helper variables\n        existent = false;\n        // remove existing data from stats\n        if (this.data[key]) {\n          existent = true;\n          this.stats.vsize -= this._getValLength(this._unwrap(this.data[key], false));\n        }\n        // set the value\n        this.data[key] = this._wrap(value, ttl);\n        this.stats.vsize += this._getValLength(value);\n        // only add the keys and key-size if the key is new\n        if (!existent) {\n          this.stats.ksize += this._getKeyLength(key);\n          this.stats.keys++;\n        }\n        this.emit(\"set\", key, value);\n        // return true\n        return true;\n      }\n\n      mset(keyValueSet) {\n        var _err, err, i, j, key, keyValuePair, len, len1, ttl, val;\n        boundMethodCheck(this, NodeCache);\n        // check if cache is overflowing\n        if (this.options.maxKeys > -1 && this.stats.keys + keyValueSet.length >= this.options.maxKeys) {\n          _err = this._error(\"ECACHEFULL\");\n          throw _err;\n        }\n\n// loop over keyValueSet to validate key and ttl\n        for (i = 0, len = keyValueSet.length; i < len; i++) {\n          keyValuePair = keyValueSet[i];\n          ({key, val, ttl} = keyValuePair);\n          // check if there is ttl and it's a number\n          if (ttl && typeof ttl !== \"number\") {\n            _err = this._error(\"ETTLTYPE\");\n            throw _err;\n          }\n          // handle invalid key types\n          if ((err = this._isInvalidKey(key)) != null) {\n            throw err;\n          }\n        }\n        for (j = 0, len1 = keyValueSet.length; j < len1; j++) {\n          keyValuePair = keyValueSet[j];\n          ({key, val, ttl} = keyValuePair);\n          this.set(key, val, ttl);\n        }\n        return true;\n      }\n\n      del(keys) {\n        var delCount, err, i, key, len, oldVal;\n        boundMethodCheck(this, NodeCache);\n        // convert keys to an array of itself\n        if (!Array.isArray(keys)) {\n          keys = [keys];\n        }\n        delCount = 0;\n        for (i = 0, len = keys.length; i < len; i++) {\n          key = keys[i];\n          // handle invalid key types\n          if ((err = this._isInvalidKey(key)) != null) {\n            throw err;\n          }\n          // only delete if existent\n          if (this.data[key] != null) {\n            // calc the stats\n            this.stats.vsize -= this._getValLength(this._unwrap(this.data[key], false));\n            this.stats.ksize -= this._getKeyLength(key);\n            this.stats.keys--;\n            delCount++;\n            // delete the value\n            oldVal = this.data[key];\n            delete this.data[key];\n            // return true\n            this.emit(\"del\", key, oldVal.v);\n          }\n        }\n        return delCount;\n      }\n\n      take(key) {\n        var _ret;\n        boundMethodCheck(this, NodeCache);\n        _ret = this.get(key);\n        if ((_ret != null)) {\n          this.del(key);\n        }\n        return _ret;\n      }\n\n      ttl(key, ttl) {\n        var err;\n        boundMethodCheck(this, NodeCache);\n        ttl || (ttl = this.options.stdTTL);\n        if (!key) {\n          return false;\n        }\n        // handle invalid key types\n        if ((err = this._isInvalidKey(key)) != null) {\n          throw err;\n        }\n        // check for existent data and update the ttl value\n        if ((this.data[key] != null) && this._check(key, this.data[key])) {\n          // if ttl < 0 delete the key. otherwise reset the value\n          if (ttl >= 0) {\n            this.data[key] = this._wrap(this.data[key].v, ttl, false);\n          } else {\n            this.del(key);\n          }\n          return true;\n        } else {\n          // return false if key has not been found\n          return false;\n        }\n      }\n\n      getTtl(key) {\n        var _ttl, err;\n        boundMethodCheck(this, NodeCache);\n        if (!key) {\n          return void 0;\n        }\n        // handle invalid key types\n        if ((err = this._isInvalidKey(key)) != null) {\n          throw err;\n        }\n        // check for existant data and update the ttl value\n        if ((this.data[key] != null) && this._check(key, this.data[key])) {\n          _ttl = this.data[key].t;\n          return _ttl;\n        } else {\n          // return undefined if key has not been found\n          return void 0;\n        }\n      }\n\n      keys() {\n        var _keys;\n        boundMethodCheck(this, NodeCache);\n        _keys = Object.keys(this.data);\n        return _keys;\n      }\n\n      has(key) {\n        var _exists;\n        boundMethodCheck(this, NodeCache);\n        _exists = (this.data[key] != null) && this._check(key, this.data[key]);\n        return _exists;\n      }\n\n      getStats() {\n        boundMethodCheck(this, NodeCache);\n        return this.stats;\n      }\n\n      flushAll(_startPeriod = true) {\n        boundMethodCheck(this, NodeCache);\n        // parameter just for testing\n\n        // set data empty\n        this.data = {};\n        // reset stats\n        this.stats = {\n          hits: 0,\n          misses: 0,\n          keys: 0,\n          ksize: 0,\n          vsize: 0\n        };\n        // reset check period\n        this._killCheckPeriod();\n        this._checkData(_startPeriod);\n        this.emit(\"flush\");\n      }\n\n      flushStats() {\n        boundMethodCheck(this, NodeCache);\n        // reset stats\n        this.stats = {\n          hits: 0,\n          misses: 0,\n          keys: 0,\n          ksize: 0,\n          vsize: 0\n        };\n        this.emit(\"flush_stats\");\n      }\n\n      close() {\n        boundMethodCheck(this, NodeCache);\n        this._killCheckPeriod();\n      }\n\n      _checkData(startPeriod = true) {\n        var key, ref, value;\n        boundMethodCheck(this, NodeCache);\n        ref = this.data;\n        // run the housekeeping method\n        for (key in ref) {\n          value = ref[key];\n          this._check(key, value);\n        }\n        if (startPeriod && this.options.checkperiod > 0) {\n          this.checkTimeout = setTimeout(this._checkData, this.options.checkperiod * 1000, startPeriod);\n          if ((this.checkTimeout != null) && (this.checkTimeout.unref != null)) {\n            this.checkTimeout.unref();\n          }\n        }\n      }\n\n      // ## _killCheckPeriod\n\n      // stop the checkdata period. Only needed to abort the script in testing mode.\n      _killCheckPeriod() {\n        if (this.checkTimeout != null) {\n          return clearTimeout(this.checkTimeout);\n        }\n      }\n\n      _check(key, data) {\n        var _retval;\n        boundMethodCheck(this, NodeCache);\n        _retval = true;\n        // data is invalid if the ttl is too old and is not 0\n        // console.log data.t < Date.now(), data.t, Date.now()\n        if (data.t !== 0 && data.t < Date.now()) {\n          if (this.options.deleteOnExpire) {\n            _retval = false;\n            this.del(key);\n          }\n          this.emit(\"expired\", key, this._unwrap(data));\n        }\n        return _retval;\n      }\n\n      _isInvalidKey(key) {\n        var ref;\n        boundMethodCheck(this, NodeCache);\n        if (ref = typeof key, indexOf.call(this.validKeyTypes, ref) < 0) {\n          return this._error(\"EKEYTYPE\", {\n            type: typeof key\n          });\n        }\n      }\n\n      _wrap(value, ttl, asClone = true) {\n        var livetime, now, oReturn, ttlMultiplicator;\n        boundMethodCheck(this, NodeCache);\n        if (!this.options.useClones) {\n          asClone = false;\n        }\n        // define the time to live\n        now = Date.now();\n        livetime = 0;\n        ttlMultiplicator = 1000;\n        // use given ttl\n        if (ttl === 0) {\n          livetime = 0;\n        } else if (ttl) {\n          livetime = now + (ttl * ttlMultiplicator);\n        } else {\n          // use standard ttl\n          if (this.options.stdTTL === 0) {\n            livetime = this.options.stdTTL;\n          } else {\n            livetime = now + (this.options.stdTTL * ttlMultiplicator);\n          }\n        }\n        // return the wrapped value\n        return oReturn = {\n          t: livetime,\n          v: asClone ? clone(value) : value\n        };\n      }\n\n      // ## _unwrap\n\n      // internal method to extract get the value out of the wrapped value\n      _unwrap(value, asClone = true) {\n        if (!this.options.useClones) {\n          asClone = false;\n        }\n        if (value.v != null) {\n          if (asClone) {\n            return clone(value.v);\n          } else {\n            return value.v;\n          }\n        }\n        return null;\n      }\n\n      // ## _getKeyLength\n\n      // internal method the calculate the key length\n      _getKeyLength(key) {\n        return key.toString().length;\n      }\n\n      _getValLength(value) {\n        boundMethodCheck(this, NodeCache);\n        if (typeof value === \"string\") {\n          // if the value is a String get the real length\n          return value.length;\n        } else if (this.options.forceString) {\n          // force string if it's defined and not passed\n          return JSON.stringify(value).length;\n        } else if (Array.isArray(value)) {\n          // if the data is an Array multiply each element with a defined default length\n          return this.options.arrayValueSize * value.length;\n        } else if (typeof value === \"number\") {\n          return 8;\n        } else if (typeof (value != null ? value.then : void 0) === \"function\") {\n          // if the data is a Promise, use defined default\n          // (can't calculate actual/resolved value size synchronously)\n          return this.options.promiseValueSize;\n        } else if (typeof Buffer !== \"undefined\" && Buffer !== null ? Buffer.isBuffer(value) : void 0) {\n          return value.length;\n        } else if ((value != null) && typeof value === \"object\") {\n          // if the data is an Object multiply each element with a defined default length\n          return this.options.objectValueSize * Object.keys(value).length;\n        } else if (typeof value === \"boolean\") {\n          return 8;\n        } else {\n          // default fallback\n          return 0;\n        }\n      }\n\n      _error(type, data = {}) {\n        var error;\n        boundMethodCheck(this, NodeCache);\n        // generate the error object\n        error = new Error();\n        error.name = type;\n        error.errorcode = type;\n        error.message = this.ERRORS[type] != null ? this.ERRORS[type](data) : \"-\";\n        error.data = data;\n        // return the error object\n        return error;\n      }\n\n      _initErrors() {\n        var _errMsg, _errT, ref;\n        boundMethodCheck(this, NodeCache);\n        this.ERRORS = {};\n        ref = this._ERRORS;\n        for (_errT in ref) {\n          _errMsg = ref[_errT];\n          this.ERRORS[_errT] = this.createErrorMessage(_errMsg);\n        }\n      }\n\n      createErrorMessage(errMsg) {\n        return function(args) {\n          return errMsg.replace(\"__key\", args.type);\n        };\n      }\n\n    };\n\n    NodeCache.prototype._ERRORS = {\n      \"ENOTFOUND\": \"Key `__key` not found\",\n      \"ECACHEFULL\": \"Cache max keys amount exceeded\",\n      \"EKEYTYPE\": \"The key argument has to be of type `string` or `number`. Found: `__key`\",\n      \"EKEYSTYPE\": \"The keys argument has to be an array.\",\n      \"ETTLTYPE\": \"The ttl argument has to be a number.\"\n    };\n\n    return NodeCache;\n\n  }).call(this);\n\n}).call(this);\n","/* (ignored) */","import indentString from 'indent-string';\nimport cleanStack from 'clean-stack';\n\nconst cleanInternalStack = stack => stack.replace(/\\s+at .*aggregate-error\\/index.js:\\d+:\\d+\\)?/g, '');\n\nexport default class AggregateError extends Error {\n\t#errors;\n\n\tname = 'AggregateError';\n\n\tconstructor(errors) {\n\t\tif (!Array.isArray(errors)) {\n\t\t\tthrow new TypeError(`Expected input to be an Array, got ${typeof errors}`);\n\t\t}\n\n\t\terrors = errors.map(error => {\n\t\t\tif (error instanceof Error) {\n\t\t\t\treturn error;\n\t\t\t}\n\n\t\t\tif (error !== null && typeof error === 'object') {\n\t\t\t\t// Handle plain error objects with message property and/or possibly other metadata\n\t\t\t\treturn Object.assign(new Error(error.message), error);\n\t\t\t}\n\n\t\t\treturn new Error(error);\n\t\t});\n\n\t\tlet message = errors\n\t\t\t.map(error => {\n\t\t\t\t// The `stack` property is not standardized, so we can't assume it exists\n\t\t\t\treturn typeof error.stack === 'string' && error.stack.length > 0 ? cleanInternalStack(cleanStack(error.stack)) : String(error);\n\t\t\t})\n\t\t\t.join('\\n');\n\t\tmessage = '\\n' + indentString(message, 4);\n\t\tsuper(message);\n\n\t\tthis.#errors = errors;\n\t}\n\n\tget errors() {\n\t\treturn this.#errors.slice();\n\t}\n}\n","import os from 'os';\nimport escapeStringRegexp from 'escape-string-regexp';\n\nconst extractPathRegex = /\\s+at.*[(\\s](.*)\\)?/;\nconst pathRegex = /^(?:(?:(?:node|node:[\\w/]+|(?:(?:node:)?internal\\/[\\w/]*|.*node_modules\\/(?:babel-polyfill|pirates)\\/.*)?\\w+)(?:\\.js)?:\\d+:\\d+)|native)/;\nconst homeDir = typeof os.homedir === 'undefined' ? '' : os.homedir().replace(/\\\\/g, '/');\n\nexport default function cleanStack(stack, {pretty = false, basePath} = {}) {\n\tconst basePathRegex = basePath && new RegExp(`(at | \\\\()${escapeStringRegexp(basePath.replace(/\\\\/g, '/'))}`, 'g');\n\n\tif (typeof stack !== 'string') {\n\t\treturn undefined;\n\t}\n\n\treturn stack.replace(/\\\\/g, '/')\n\t\t.split('\\n')\n\t\t.filter(line => {\n\t\t\tconst pathMatches = line.match(extractPathRegex);\n\t\t\tif (pathMatches === null || !pathMatches[1]) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst match = pathMatches[1];\n\n\t\t\t// Electron\n\t\t\tif (\n\t\t\t\tmatch.includes('.app/Contents/Resources/electron.asar') ||\n\t\t\t\tmatch.includes('.app/Contents/Resources/default_app.asar') ||\n\t\t\t\tmatch.includes('node_modules/electron/dist/resources/electron.asar') ||\n\t\t\t\tmatch.includes('node_modules/electron/dist/resources/default_app.asar')\n\t\t\t) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn !pathRegex.test(match);\n\t\t})\n\t\t.filter(line => line.trim() !== '')\n\t\t.map(line => {\n\t\t\tif (basePathRegex) {\n\t\t\t\tline = line.replace(basePathRegex, '$1');\n\t\t\t}\n\n\t\t\tif (pretty) {\n\t\t\t\tline = line.replace(extractPathRegex, (m, p1) => m.replace(p1, p1.replace(homeDir, '~')));\n\t\t\t}\n\n\t\t\treturn line;\n\t\t})\n\t\t.join('\\n');\n}\n","export default function escapeStringRegexp(string) {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\t// Escape characters with special meaning either inside or outside character sets.\n\t// Use a simple backslash escape when it’s always valid, and a `\\xnn` escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.\n\treturn string\n\t\t.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n\t\t.replace(/-/g, '\\\\x2d');\n}\n","export default function indentString(string, count = 1, options = {}) {\n\tconst {\n\t\tindent = ' ',\n\t\tincludeEmptyLines = false\n\t} = options;\n\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError(\n\t\t\t`Expected \\`input\\` to be a \\`string\\`, got \\`${typeof string}\\``\n\t\t);\n\t}\n\n\tif (typeof count !== 'number') {\n\t\tthrow new TypeError(\n\t\t\t`Expected \\`count\\` to be a \\`number\\`, got \\`${typeof count}\\``\n\t\t);\n\t}\n\n\tif (count < 0) {\n\t\tthrow new RangeError(\n\t\t\t`Expected \\`count\\` to be at least 0, got \\`${count}\\``\n\t\t);\n\t}\n\n\tif (typeof indent !== 'string') {\n\t\tthrow new TypeError(\n\t\t\t`Expected \\`options.indent\\` to be a \\`string\\`, got \\`${typeof indent}\\``\n\t\t);\n\t}\n\n\tif (count === 0) {\n\t\treturn string;\n\t}\n\n\tconst regex = includeEmptyLines ? /^/gm : /^(?!\\s*$)/gm;\n\n\treturn string.replace(regex, indent.repeat(count));\n}\n","import AggregateError from 'aggregate-error';\n\n/**\nAn error to be thrown when the request is aborted by AbortController.\nDOMException is thrown instead of this Error when DOMException is available.\n*/\nexport class AbortError extends Error {\n\tconstructor(message) {\n\t\tsuper();\n\t\tthis.name = 'AbortError';\n\t\tthis.message = message;\n\t}\n}\n\n/**\nTODO: Remove AbortError and just throw DOMException when targeting Node 18.\n*/\nconst getDOMException = errorMessage => globalThis.DOMException === undefined\n\t? new AbortError(errorMessage)\n\t: new DOMException(errorMessage);\n\n/**\nTODO: Remove below function and just 'reject(signal.reason)' when targeting Node 18.\n*/\nconst getAbortedReason = signal => {\n\tconst reason = signal.reason === undefined\n\t\t? getDOMException('This operation was aborted.')\n\t\t: signal.reason;\n\n\treturn reason instanceof Error ? reason : getDOMException(reason);\n};\n\nexport default async function pMap(\n\titerable,\n\tmapper,\n\t{\n\t\tconcurrency = Number.POSITIVE_INFINITY,\n\t\tstopOnError = true,\n\t\tsignal,\n\t} = {},\n) {\n\treturn new Promise((resolve, reject_) => {\n\t\tif (iterable[Symbol.iterator] === undefined && iterable[Symbol.asyncIterator] === undefined) {\n\t\t\tthrow new TypeError(`Expected \\`input\\` to be either an \\`Iterable\\` or \\`AsyncIterable\\`, got (${typeof iterable})`);\n\t\t}\n\n\t\tif (typeof mapper !== 'function') {\n\t\t\tthrow new TypeError('Mapper function is required');\n\t\t}\n\n\t\tif (!((Number.isSafeInteger(concurrency) || concurrency === Number.POSITIVE_INFINITY) && concurrency >= 1)) {\n\t\t\tthrow new TypeError(`Expected \\`concurrency\\` to be an integer from 1 and up or \\`Infinity\\`, got \\`${concurrency}\\` (${typeof concurrency})`);\n\t\t}\n\n\t\tconst result = [];\n\t\tconst errors = [];\n\t\tconst skippedIndexesMap = new Map();\n\t\tlet isRejected = false;\n\t\tlet isResolved = false;\n\t\tlet isIterableDone = false;\n\t\tlet resolvingCount = 0;\n\t\tlet currentIndex = 0;\n\t\tconst iterator = iterable[Symbol.iterator] === undefined ? iterable[Symbol.asyncIterator]() : iterable[Symbol.iterator]();\n\n\t\tconst reject = reason => {\n\t\t\tisRejected = true;\n\t\t\tisResolved = true;\n\t\t\treject_(reason);\n\t\t};\n\n\t\tif (signal) {\n\t\t\tif (signal.aborted) {\n\t\t\t\treject(getAbortedReason(signal));\n\t\t\t}\n\n\t\t\tsignal.addEventListener('abort', () => {\n\t\t\t\treject(getAbortedReason(signal));\n\t\t\t});\n\t\t}\n\n\t\tconst next = async () => {\n\t\t\tif (isResolved) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst nextItem = await iterator.next();\n\n\t\t\tconst index = currentIndex;\n\t\t\tcurrentIndex++;\n\n\t\t\t// Note: `iterator.next()` can be called many times in parallel.\n\t\t\t// This can cause multiple calls to this `next()` function to\n\t\t\t// receive a `nextItem` with `done === true`.\n\t\t\t// The shutdown logic that rejects/resolves must be protected\n\t\t\t// so it runs only one time as the `skippedIndex` logic is\n\t\t\t// non-idempotent.\n\t\t\tif (nextItem.done) {\n\t\t\t\tisIterableDone = true;\n\n\t\t\t\tif (resolvingCount === 0 && !isResolved) {\n\t\t\t\t\tif (!stopOnError && errors.length > 0) {\n\t\t\t\t\t\treject(new AggregateError(errors));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tisResolved = true;\n\n\t\t\t\t\tif (skippedIndexesMap.size === 0) {\n\t\t\t\t\t\tresolve(result);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst pureResult = [];\n\n\t\t\t\t\t// Support multiple `pMapSkip`'s.\n\t\t\t\t\tfor (const [index, value] of result.entries()) {\n\t\t\t\t\t\tif (skippedIndexesMap.get(index) === pMapSkip) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tpureResult.push(value);\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve(pureResult);\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tresolvingCount++;\n\n\t\t\t// Intentionally detached\n\t\t\t(async () => {\n\t\t\t\ttry {\n\t\t\t\t\tconst element = await nextItem.value;\n\n\t\t\t\t\tif (isResolved) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst value = await mapper(element, index);\n\n\t\t\t\t\t// Use Map to stage the index of the element.\n\t\t\t\t\tif (value === pMapSkip) {\n\t\t\t\t\t\tskippedIndexesMap.set(index, value);\n\t\t\t\t\t}\n\n\t\t\t\t\tresult[index] = value;\n\n\t\t\t\t\tresolvingCount--;\n\t\t\t\t\tawait next();\n\t\t\t\t} catch (error) {\n\t\t\t\t\tif (stopOnError) {\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t} else {\n\t\t\t\t\t\terrors.push(error);\n\t\t\t\t\t\tresolvingCount--;\n\n\t\t\t\t\t\t// In that case we can't really continue regardless of `stopOnError` state\n\t\t\t\t\t\t// since an iterable is likely to continue throwing after it throws once.\n\t\t\t\t\t\t// If we continue calling `next()` indefinitely we will likely end up\n\t\t\t\t\t\t// in an infinite loop of failed iteration.\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tawait next();\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\treject(error);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})();\n\t\t};\n\n\t\t// Create the concurrent runners in a detached (non-awaited)\n\t\t// promise. We need this so we can await the `next()` calls\n\t\t// to stop creating runners before hitting the concurrency limit\n\t\t// if the iterable has already been marked as done.\n\t\t// NOTE: We *must* do this for async iterators otherwise we'll spin up\n\t\t// infinite `next()` calls by default and never start the event loop.\n\t\t(async () => {\n\t\t\tfor (let index = 0; index < concurrency; index++) {\n\t\t\t\ttry {\n\t\t\t\t\t// eslint-disable-next-line no-await-in-loop\n\t\t\t\t\tawait next();\n\t\t\t\t} catch (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (isIterableDone || isRejected) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t})();\n\t});\n}\n\nexport const pMapSkip = Symbol('skip');\n","/* eslint-disable */\n/*\n* DO NOT MODIFY, THIS IS AUTO GENERATED\n* Execute `npm run generate` to regenerate\n*/\nimport pMap from \"p-map\";\nimport NodeCache from \"node-cache\";\nimport PokeAPIOptions from \"./interfaces/PokeAPIOptions.js\";\nimport handleError from \"./utils/ErrorHandler.js\";\nimport getJSON from \"./utils/Getter.js\";\nexport default class Pokedex {\n    constructor(options) {\n        this.options = new PokeAPIOptions(options, new NodeCache());\n    }\n    async getResource(endpoint, callback) {\n        try {\n            // Fail if the endpoint is not supplied\n            if (!endpoint) {\n                throw new Error('Param \"endpoint\" is required needs to be a string or array of strings');\n            }\n            // Fail if the input types aren't accepted\n            if (!Array.isArray(endpoint) && typeof endpoint !== 'string') {\n                throw new Error('Param \"endpoint\" needs to be a string or array of strings');\n            }\n            /// If the user has submitted a string, return the JSON promise\n            if (typeof endpoint === 'string') {\n                return getJSON(this.options, endpoint, callback);\n            }\n            // If the user has submitted an Array return a new promise which will resolve when all getJSON calls are ended\n            const mapper = async (endpoints) => {\n                const queryRes = await getJSON(this.options, endpoints);\n                return queryRes;\n            };\n            // Fetch data asynchronously to be faster\n            const mappedResults = await pMap(endpoint, mapper, { concurrency: 4 });\n            if (callback) {\n                callback(mappedResults);\n            }\n            return mappedResults;\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    /** @deprecated - will be removed on the next version. Use {@link getResource} instead */\n    async resource(endpoint, callback) {\n        try {\n            // Fail if the endpoint is not supplied\n            if (!endpoint) {\n                throw new Error('Param \"endpoint\" is required needs to be a string or array of strings');\n            }\n            // Fail if the input types aren't accepted\n            if (!Array.isArray(endpoint) && typeof endpoint !== 'string') {\n                throw new Error('Param \"endpoint\" needs to be a string or array of strings');\n            }\n            /// If the user has submitted a string, return the JSON promise\n            if (typeof endpoint === 'string') {\n                return getJSON(this.options, endpoint, callback);\n            }\n            // If the user has submitted an Array return a new promise which will resolve when all getJSON calls are ended\n            const mapper = async (endpoints) => {\n                const queryRes = await getJSON(this.options, endpoints);\n                return queryRes;\n            };\n            // Fetch data asynchronously to be faster\n            const mappedResults = await pMap(endpoint, mapper, { concurrency: 4 });\n            if (callback) {\n                callback(mappedResults);\n            }\n            return mappedResults;\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getBerryByName(nameOrId, callback) {\n        try {\n            // Fail if the param is not supplied\n            if (!nameOrId) {\n                throw new Error('Param \"nameOrId\" is required (Must be a string, array of strings or array of string and/or numbers )');\n            }\n            // Fail if the input types aren't accepted\n            if (!Array.isArray(nameOrId) && typeof nameOrId !== 'number' && typeof nameOrId !== 'string') {\n                throw new Error('Param \"nameOrId\" must be a string, array of strings or array of string and/or numbers');\n            }\n            // If the user has submitted a Name or an ID, return the JSON promise\n            if (typeof nameOrId === 'number' || typeof nameOrId === 'string') {\n                return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}berry/${nameOrId}/`, callback);\n            }\n            // If the user has submitted an Array return a new promise which will resolve when all getJSON calls are ended\n            const mapper = async (nameOrIds) => {\n                const queryRes = await getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}berry/${nameOrIds}/`);\n                return queryRes;\n            };\n            // Fetch data asynchronously to be faster\n            const mappedResults = await pMap(nameOrId, mapper, { concurrency: 4 });\n            // Invoke the callback if we have one\n            if (callback) {\n                callback(mappedResults);\n            }\n            return mappedResults;\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getBerryFirmnessByName(nameOrId, callback) {\n        try {\n            // Fail if the param is not supplied\n            if (!nameOrId) {\n                throw new Error('Param \"nameOrId\" is required (Must be a string, array of strings or array of string and/or numbers )');\n            }\n            // Fail if the input types aren't accepted\n            if (!Array.isArray(nameOrId) && typeof nameOrId !== 'number' && typeof nameOrId !== 'string') {\n                throw new Error('Param \"nameOrId\" must be a string, array of strings or array of string and/or numbers');\n            }\n            // If the user has submitted a Name or an ID, return the JSON promise\n            if (typeof nameOrId === 'number' || typeof nameOrId === 'string') {\n                return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}berry-firmness/${nameOrId}/`, callback);\n            }\n            // If the user has submitted an Array return a new promise which will resolve when all getJSON calls are ended\n            const mapper = async (nameOrIds) => {\n                const queryRes = await getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}berry-firmness/${nameOrIds}/`);\n                return queryRes;\n            };\n            // Fetch data asynchronously to be faster\n            const mappedResults = await pMap(nameOrId, mapper, { concurrency: 4 });\n            // Invoke the callback if we have one\n            if (callback) {\n                callback(mappedResults);\n            }\n            return mappedResults;\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getBerryFlavorByName(nameOrId, callback) {\n        try {\n            // Fail if the param is not supplied\n            if (!nameOrId) {\n                throw new Error('Param \"nameOrId\" is required (Must be a string, array of strings or array of string and/or numbers )');\n            }\n            // Fail if the input types aren't accepted\n            if (!Array.isArray(nameOrId) && typeof nameOrId !== 'number' && typeof nameOrId !== 'string') {\n                throw new Error('Param \"nameOrId\" must be a string, array of strings or array of string and/or numbers');\n            }\n            // If the user has submitted a Name or an ID, return the JSON promise\n            if (typeof nameOrId === 'number' || typeof nameOrId === 'string') {\n                return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}berry-flavor/${nameOrId}/`, callback);\n            }\n            // If the user has submitted an Array return a new promise which will resolve when all getJSON calls are ended\n            const mapper = async (nameOrIds) => {\n                const queryRes = await getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}berry-flavor/${nameOrIds}/`);\n                return queryRes;\n            };\n            // Fetch data asynchronously to be faster\n            const mappedResults = await pMap(nameOrId, mapper, { concurrency: 4 });\n            // Invoke the callback if we have one\n            if (callback) {\n                callback(mappedResults);\n            }\n            return mappedResults;\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getContestTypeByName(nameOrId, callback) {\n        try {\n            // Fail if the param is not supplied\n            if (!nameOrId) {\n                throw new Error('Param \"nameOrId\" is required (Must be a string, array of strings or array of string and/or numbers )');\n            }\n            // Fail if the input types aren't accepted\n            if (!Array.isArray(nameOrId) && typeof nameOrId !== 'number' && typeof nameOrId !== 'string') {\n                throw new Error('Param \"nameOrId\" must be a string, array of strings or array of string and/or numbers');\n            }\n            // If the user has submitted a Name or an ID, return the JSON promise\n            if (typeof nameOrId === 'number' || typeof nameOrId === 'string') {\n                return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}contest-type/${nameOrId}/`, callback);\n            }\n            // If the user has submitted an Array return a new promise which will resolve when all getJSON calls are ended\n            const mapper = async (nameOrIds) => {\n                const queryRes = await getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}contest-type/${nameOrIds}/`);\n                return queryRes;\n            };\n            // Fetch data asynchronously to be faster\n            const mappedResults = await pMap(nameOrId, mapper, { concurrency: 4 });\n            // Invoke the callback if we have one\n            if (callback) {\n                callback(mappedResults);\n            }\n            return mappedResults;\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getContestEffectById(id, callback) {\n        try {\n            // Fail if the param is not supplied\n            if (!id) {\n                throw new Error('Param \"id\" is required (Must be a number or array of numbers )');\n            }\n            // Fail if the input types aren't accepted\n            if (!Array.isArray(id) && typeof id !== 'number' && typeof id !== 'string') {\n                throw new Error('Param \"id\" must be a number or array of numbers');\n            }\n            // If the user has submitted a Name or an ID, return the JSON promise\n            if (typeof id === 'number' || typeof id === 'string') {\n                return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}contest-effect/${id}/`, callback);\n            }\n            // If the user has submitted an Array return a new promise which will resolve when all getJSON calls are ended\n            const mapper = async (ids) => {\n                const queryRes = await getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}contest-effect/${ids}/`);\n                return queryRes;\n            };\n            // Fetch data asynchronously to be faster\n            const mappedResults = await pMap(id, mapper, { concurrency: 4 });\n            // Invoke the callback if we have one\n            if (callback) {\n                callback(mappedResults);\n            }\n            return mappedResults;\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getSuperContestEffectById(id, callback) {\n        try {\n            // Fail if the param is not supplied\n            if (!id) {\n                throw new Error('Param \"id\" is required (Must be a number or array of numbers )');\n            }\n            // Fail if the input types aren't accepted\n            if (!Array.isArray(id) && typeof id !== 'number' && typeof id !== 'string') {\n                throw new Error('Param \"id\" must be a number or array of numbers');\n            }\n            // If the user has submitted a Name or an ID, return the JSON promise\n            if (typeof id === 'number' || typeof id === 'string') {\n                return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}super-contest-effect/${id}/`, callback);\n            }\n            // If the user has submitted an Array return a new promise which will resolve when all getJSON calls are ended\n            const mapper = async (ids) => {\n                const queryRes = await getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}super-contest-effect/${ids}/`);\n                return queryRes;\n            };\n            // Fetch data asynchronously to be faster\n            const mappedResults = await pMap(id, mapper, { concurrency: 4 });\n            // Invoke the callback if we have one\n            if (callback) {\n                callback(mappedResults);\n            }\n            return mappedResults;\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getEncounterMethodByName(nameOrId, callback) {\n        try {\n            // Fail if the param is not supplied\n            if (!nameOrId) {\n                throw new Error('Param \"nameOrId\" is required (Must be a string, array of strings or array of string and/or numbers )');\n            }\n            // Fail if the input types aren't accepted\n            if (!Array.isArray(nameOrId) && typeof nameOrId !== 'number' && typeof nameOrId !== 'string') {\n                throw new Error('Param \"nameOrId\" must be a string, array of strings or array of string and/or numbers');\n            }\n            // If the user has submitted a Name or an ID, return the JSON promise\n            if (typeof nameOrId === 'number' || typeof nameOrId === 'string') {\n                return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}encounter-method/${nameOrId}/`, callback);\n            }\n            // If the user has submitted an Array return a new promise which will resolve when all getJSON calls are ended\n            const mapper = async (nameOrIds) => {\n                const queryRes = await getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}encounter-method/${nameOrIds}/`);\n                return queryRes;\n            };\n            // Fetch data asynchronously to be faster\n            const mappedResults = await pMap(nameOrId, mapper, { concurrency: 4 });\n            // Invoke the callback if we have one\n            if (callback) {\n                callback(mappedResults);\n            }\n            return mappedResults;\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getEncounterConditionByName(nameOrId, callback) {\n        try {\n            // Fail if the param is not supplied\n            if (!nameOrId) {\n                throw new Error('Param \"nameOrId\" is required (Must be a string, array of strings or array of string and/or numbers )');\n            }\n            // Fail if the input types aren't accepted\n            if (!Array.isArray(nameOrId) && typeof nameOrId !== 'number' && typeof nameOrId !== 'string') {\n                throw new Error('Param \"nameOrId\" must be a string, array of strings or array of string and/or numbers');\n            }\n            // If the user has submitted a Name or an ID, return the JSON promise\n            if (typeof nameOrId === 'number' || typeof nameOrId === 'string') {\n                return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}encounter-condition/${nameOrId}/`, callback);\n            }\n            // If the user has submitted an Array return a new promise which will resolve when all getJSON calls are ended\n            const mapper = async (nameOrIds) => {\n                const queryRes = await getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}encounter-condition/${nameOrIds}/`);\n                return queryRes;\n            };\n            // Fetch data asynchronously to be faster\n            const mappedResults = await pMap(nameOrId, mapper, { concurrency: 4 });\n            // Invoke the callback if we have one\n            if (callback) {\n                callback(mappedResults);\n            }\n            return mappedResults;\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getEncounterConditionValueByName(nameOrId, callback) {\n        try {\n            // Fail if the param is not supplied\n            if (!nameOrId) {\n                throw new Error('Param \"nameOrId\" is required (Must be a string, array of strings or array of string and/or numbers )');\n            }\n            // Fail if the input types aren't accepted\n            if (!Array.isArray(nameOrId) && typeof nameOrId !== 'number' && typeof nameOrId !== 'string') {\n                throw new Error('Param \"nameOrId\" must be a string, array of strings or array of string and/or numbers');\n            }\n            // If the user has submitted a Name or an ID, return the JSON promise\n            if (typeof nameOrId === 'number' || typeof nameOrId === 'string') {\n                return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}encounter-condition-value/${nameOrId}/`, callback);\n            }\n            // If the user has submitted an Array return a new promise which will resolve when all getJSON calls are ended\n            const mapper = async (nameOrIds) => {\n                const queryRes = await getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}encounter-condition-value/${nameOrIds}/`);\n                return queryRes;\n            };\n            // Fetch data asynchronously to be faster\n            const mappedResults = await pMap(nameOrId, mapper, { concurrency: 4 });\n            // Invoke the callback if we have one\n            if (callback) {\n                callback(mappedResults);\n            }\n            return mappedResults;\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getEvolutionChainById(id, callback) {\n        try {\n            // Fail if the param is not supplied\n            if (!id) {\n                throw new Error('Param \"id\" is required (Must be a number or array of numbers )');\n            }\n            // Fail if the input types aren't accepted\n            if (!Array.isArray(id) && typeof id !== 'number' && typeof id !== 'string') {\n                throw new Error('Param \"id\" must be a number or array of numbers');\n            }\n            // If the user has submitted a Name or an ID, return the JSON promise\n            if (typeof id === 'number' || typeof id === 'string') {\n                return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}evolution-chain/${id}/`, callback);\n            }\n            // If the user has submitted an Array return a new promise which will resolve when all getJSON calls are ended\n            const mapper = async (ids) => {\n                const queryRes = await getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}evolution-chain/${ids}/`);\n                return queryRes;\n            };\n            // Fetch data asynchronously to be faster\n            const mappedResults = await pMap(id, mapper, { concurrency: 4 });\n            // Invoke the callback if we have one\n            if (callback) {\n                callback(mappedResults);\n            }\n            return mappedResults;\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getEvolutionTriggerByName(nameOrId, callback) {\n        try {\n            // Fail if the param is not supplied\n            if (!nameOrId) {\n                throw new Error('Param \"nameOrId\" is required (Must be a string, array of strings or array of string and/or numbers )');\n            }\n            // Fail if the input types aren't accepted\n            if (!Array.isArray(nameOrId) && typeof nameOrId !== 'number' && typeof nameOrId !== 'string') {\n                throw new Error('Param \"nameOrId\" must be a string, array of strings or array of string and/or numbers');\n            }\n            // If the user has submitted a Name or an ID, return the JSON promise\n            if (typeof nameOrId === 'number' || typeof nameOrId === 'string') {\n                return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}evolution-trigger/${nameOrId}/`, callback);\n            }\n            // If the user has submitted an Array return a new promise which will resolve when all getJSON calls are ended\n            const mapper = async (nameOrIds) => {\n                const queryRes = await getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}evolution-trigger/${nameOrIds}/`);\n                return queryRes;\n            };\n            // Fetch data asynchronously to be faster\n            const mappedResults = await pMap(nameOrId, mapper, { concurrency: 4 });\n            // Invoke the callback if we have one\n            if (callback) {\n                callback(mappedResults);\n            }\n            return mappedResults;\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getGenerationByName(nameOrId, callback) {\n        try {\n            // Fail if the param is not supplied\n            if (!nameOrId) {\n                throw new Error('Param \"nameOrId\" is required (Must be a string, array of strings or array of string and/or numbers )');\n            }\n            // Fail if the input types aren't accepted\n            if (!Array.isArray(nameOrId) && typeof nameOrId !== 'number' && typeof nameOrId !== 'string') {\n                throw new Error('Param \"nameOrId\" must be a string, array of strings or array of string and/or numbers');\n            }\n            // If the user has submitted a Name or an ID, return the JSON promise\n            if (typeof nameOrId === 'number' || typeof nameOrId === 'string') {\n                return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}generation/${nameOrId}/`, callback);\n            }\n            // If the user has submitted an Array return a new promise which will resolve when all getJSON calls are ended\n            const mapper = async (nameOrIds) => {\n                const queryRes = await getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}generation/${nameOrIds}/`);\n                return queryRes;\n            };\n            // Fetch data asynchronously to be faster\n            const mappedResults = await pMap(nameOrId, mapper, { concurrency: 4 });\n            // Invoke the callback if we have one\n            if (callback) {\n                callback(mappedResults);\n            }\n            return mappedResults;\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getPokedexByName(nameOrId, callback) {\n        try {\n            // Fail if the param is not supplied\n            if (!nameOrId) {\n                throw new Error('Param \"nameOrId\" is required (Must be a string, array of strings or array of string and/or numbers )');\n            }\n            // Fail if the input types aren't accepted\n            if (!Array.isArray(nameOrId) && typeof nameOrId !== 'number' && typeof nameOrId !== 'string') {\n                throw new Error('Param \"nameOrId\" must be a string, array of strings or array of string and/or numbers');\n            }\n            // If the user has submitted a Name or an ID, return the JSON promise\n            if (typeof nameOrId === 'number' || typeof nameOrId === 'string') {\n                return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}pokedex/${nameOrId}/`, callback);\n            }\n            // If the user has submitted an Array return a new promise which will resolve when all getJSON calls are ended\n            const mapper = async (nameOrIds) => {\n                const queryRes = await getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}pokedex/${nameOrIds}/`);\n                return queryRes;\n            };\n            // Fetch data asynchronously to be faster\n            const mappedResults = await pMap(nameOrId, mapper, { concurrency: 4 });\n            // Invoke the callback if we have one\n            if (callback) {\n                callback(mappedResults);\n            }\n            return mappedResults;\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getVersionByName(nameOrId, callback) {\n        try {\n            // Fail if the param is not supplied\n            if (!nameOrId) {\n                throw new Error('Param \"nameOrId\" is required (Must be a string, array of strings or array of string and/or numbers )');\n            }\n            // Fail if the input types aren't accepted\n            if (!Array.isArray(nameOrId) && typeof nameOrId !== 'number' && typeof nameOrId !== 'string') {\n                throw new Error('Param \"nameOrId\" must be a string, array of strings or array of string and/or numbers');\n            }\n            // If the user has submitted a Name or an ID, return the JSON promise\n            if (typeof nameOrId === 'number' || typeof nameOrId === 'string') {\n                return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}version/${nameOrId}/`, callback);\n            }\n            // If the user has submitted an Array return a new promise which will resolve when all getJSON calls are ended\n            const mapper = async (nameOrIds) => {\n                const queryRes = await getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}version/${nameOrIds}/`);\n                return queryRes;\n            };\n            // Fetch data asynchronously to be faster\n            const mappedResults = await pMap(nameOrId, mapper, { concurrency: 4 });\n            // Invoke the callback if we have one\n            if (callback) {\n                callback(mappedResults);\n            }\n            return mappedResults;\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getVersionGroupByName(nameOrId, callback) {\n        try {\n            // Fail if the param is not supplied\n            if (!nameOrId) {\n                throw new Error('Param \"nameOrId\" is required (Must be a string, array of strings or array of string and/or numbers )');\n            }\n            // Fail if the input types aren't accepted\n            if (!Array.isArray(nameOrId) && typeof nameOrId !== 'number' && typeof nameOrId !== 'string') {\n                throw new Error('Param \"nameOrId\" must be a string, array of strings or array of string and/or numbers');\n            }\n            // If the user has submitted a Name or an ID, return the JSON promise\n            if (typeof nameOrId === 'number' || typeof nameOrId === 'string') {\n                return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}version-group/${nameOrId}/`, callback);\n            }\n            // If the user has submitted an Array return a new promise which will resolve when all getJSON calls are ended\n            const mapper = async (nameOrIds) => {\n                const queryRes = await getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}version-group/${nameOrIds}/`);\n                return queryRes;\n            };\n            // Fetch data asynchronously to be faster\n            const mappedResults = await pMap(nameOrId, mapper, { concurrency: 4 });\n            // Invoke the callback if we have one\n            if (callback) {\n                callback(mappedResults);\n            }\n            return mappedResults;\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getItemByName(nameOrId, callback) {\n        try {\n            // Fail if the param is not supplied\n            if (!nameOrId) {\n                throw new Error('Param \"nameOrId\" is required (Must be a string, array of strings or array of string and/or numbers )');\n            }\n            // Fail if the input types aren't accepted\n            if (!Array.isArray(nameOrId) && typeof nameOrId !== 'number' && typeof nameOrId !== 'string') {\n                throw new Error('Param \"nameOrId\" must be a string, array of strings or array of string and/or numbers');\n            }\n            // If the user has submitted a Name or an ID, return the JSON promise\n            if (typeof nameOrId === 'number' || typeof nameOrId === 'string') {\n                return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}item/${nameOrId}/`, callback);\n            }\n            // If the user has submitted an Array return a new promise which will resolve when all getJSON calls are ended\n            const mapper = async (nameOrIds) => {\n                const queryRes = await getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}item/${nameOrIds}/`);\n                return queryRes;\n            };\n            // Fetch data asynchronously to be faster\n            const mappedResults = await pMap(nameOrId, mapper, { concurrency: 4 });\n            // Invoke the callback if we have one\n            if (callback) {\n                callback(mappedResults);\n            }\n            return mappedResults;\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getItemAttributeByName(nameOrId, callback) {\n        try {\n            // Fail if the param is not supplied\n            if (!nameOrId) {\n                throw new Error('Param \"nameOrId\" is required (Must be a string, array of strings or array of string and/or numbers )');\n            }\n            // Fail if the input types aren't accepted\n            if (!Array.isArray(nameOrId) && typeof nameOrId !== 'number' && typeof nameOrId !== 'string') {\n                throw new Error('Param \"nameOrId\" must be a string, array of strings or array of string and/or numbers');\n            }\n            // If the user has submitted a Name or an ID, return the JSON promise\n            if (typeof nameOrId === 'number' || typeof nameOrId === 'string') {\n                return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}item-attribute/${nameOrId}/`, callback);\n            }\n            // If the user has submitted an Array return a new promise which will resolve when all getJSON calls are ended\n            const mapper = async (nameOrIds) => {\n                const queryRes = await getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}item-attribute/${nameOrIds}/`);\n                return queryRes;\n            };\n            // Fetch data asynchronously to be faster\n            const mappedResults = await pMap(nameOrId, mapper, { concurrency: 4 });\n            // Invoke the callback if we have one\n            if (callback) {\n                callback(mappedResults);\n            }\n            return mappedResults;\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getItemCategoryByName(nameOrId, callback) {\n        try {\n            // Fail if the param is not supplied\n            if (!nameOrId) {\n                throw new Error('Param \"nameOrId\" is required (Must be a string, array of strings or array of string and/or numbers )');\n            }\n            // Fail if the input types aren't accepted\n            if (!Array.isArray(nameOrId) && typeof nameOrId !== 'number' && typeof nameOrId !== 'string') {\n                throw new Error('Param \"nameOrId\" must be a string, array of strings or array of string and/or numbers');\n            }\n            // If the user has submitted a Name or an ID, return the JSON promise\n            if (typeof nameOrId === 'number' || typeof nameOrId === 'string') {\n                return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}item-category/${nameOrId}/`, callback);\n            }\n            // If the user has submitted an Array return a new promise which will resolve when all getJSON calls are ended\n            const mapper = async (nameOrIds) => {\n                const queryRes = await getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}item-category/${nameOrIds}/`);\n                return queryRes;\n            };\n            // Fetch data asynchronously to be faster\n            const mappedResults = await pMap(nameOrId, mapper, { concurrency: 4 });\n            // Invoke the callback if we have one\n            if (callback) {\n                callback(mappedResults);\n            }\n            return mappedResults;\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getItemFlingEffectByName(nameOrId, callback) {\n        try {\n            // Fail if the param is not supplied\n            if (!nameOrId) {\n                throw new Error('Param \"nameOrId\" is required (Must be a string, array of strings or array of string and/or numbers )');\n            }\n            // Fail if the input types aren't accepted\n            if (!Array.isArray(nameOrId) && typeof nameOrId !== 'number' && typeof nameOrId !== 'string') {\n                throw new Error('Param \"nameOrId\" must be a string, array of strings or array of string and/or numbers');\n            }\n            // If the user has submitted a Name or an ID, return the JSON promise\n            if (typeof nameOrId === 'number' || typeof nameOrId === 'string') {\n                return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}item-fling-effect/${nameOrId}/`, callback);\n            }\n            // If the user has submitted an Array return a new promise which will resolve when all getJSON calls are ended\n            const mapper = async (nameOrIds) => {\n                const queryRes = await getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}item-fling-effect/${nameOrIds}/`);\n                return queryRes;\n            };\n            // Fetch data asynchronously to be faster\n            const mappedResults = await pMap(nameOrId, mapper, { concurrency: 4 });\n            // Invoke the callback if we have one\n            if (callback) {\n                callback(mappedResults);\n            }\n            return mappedResults;\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getItemPocketByName(nameOrId, callback) {\n        try {\n            // Fail if the param is not supplied\n            if (!nameOrId) {\n                throw new Error('Param \"nameOrId\" is required (Must be a string, array of strings or array of string and/or numbers )');\n            }\n            // Fail if the input types aren't accepted\n            if (!Array.isArray(nameOrId) && typeof nameOrId !== 'number' && typeof nameOrId !== 'string') {\n                throw new Error('Param \"nameOrId\" must be a string, array of strings or array of string and/or numbers');\n            }\n            // If the user has submitted a Name or an ID, return the JSON promise\n            if (typeof nameOrId === 'number' || typeof nameOrId === 'string') {\n                return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}item-pocket/${nameOrId}/`, callback);\n            }\n            // If the user has submitted an Array return a new promise which will resolve when all getJSON calls are ended\n            const mapper = async (nameOrIds) => {\n                const queryRes = await getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}item-pocket/${nameOrIds}/`);\n                return queryRes;\n            };\n            // Fetch data asynchronously to be faster\n            const mappedResults = await pMap(nameOrId, mapper, { concurrency: 4 });\n            // Invoke the callback if we have one\n            if (callback) {\n                callback(mappedResults);\n            }\n            return mappedResults;\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getMachineById(id, callback) {\n        try {\n            // Fail if the param is not supplied\n            if (!id) {\n                throw new Error('Param \"id\" is required (Must be a number or array of numbers )');\n            }\n            // Fail if the input types aren't accepted\n            if (!Array.isArray(id) && typeof id !== 'number' && typeof id !== 'string') {\n                throw new Error('Param \"id\" must be a number or array of numbers');\n            }\n            // If the user has submitted a Name or an ID, return the JSON promise\n            if (typeof id === 'number' || typeof id === 'string') {\n                return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}machine/${id}/`, callback);\n            }\n            // If the user has submitted an Array return a new promise which will resolve when all getJSON calls are ended\n            const mapper = async (ids) => {\n                const queryRes = await getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}machine/${ids}/`);\n                return queryRes;\n            };\n            // Fetch data asynchronously to be faster\n            const mappedResults = await pMap(id, mapper, { concurrency: 4 });\n            // Invoke the callback if we have one\n            if (callback) {\n                callback(mappedResults);\n            }\n            return mappedResults;\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getMoveByName(nameOrId, callback) {\n        try {\n            // Fail if the param is not supplied\n            if (!nameOrId) {\n                throw new Error('Param \"nameOrId\" is required (Must be a string, array of strings or array of string and/or numbers )');\n            }\n            // Fail if the input types aren't accepted\n            if (!Array.isArray(nameOrId) && typeof nameOrId !== 'number' && typeof nameOrId !== 'string') {\n                throw new Error('Param \"nameOrId\" must be a string, array of strings or array of string and/or numbers');\n            }\n            // If the user has submitted a Name or an ID, return the JSON promise\n            if (typeof nameOrId === 'number' || typeof nameOrId === 'string') {\n                return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}move/${nameOrId}/`, callback);\n            }\n            // If the user has submitted an Array return a new promise which will resolve when all getJSON calls are ended\n            const mapper = async (nameOrIds) => {\n                const queryRes = await getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}move/${nameOrIds}/`);\n                return queryRes;\n            };\n            // Fetch data asynchronously to be faster\n            const mappedResults = await pMap(nameOrId, mapper, { concurrency: 4 });\n            // Invoke the callback if we have one\n            if (callback) {\n                callback(mappedResults);\n            }\n            return mappedResults;\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getMoveAilmentByName(nameOrId, callback) {\n        try {\n            // Fail if the param is not supplied\n            if (!nameOrId) {\n                throw new Error('Param \"nameOrId\" is required (Must be a string, array of strings or array of string and/or numbers )');\n            }\n            // Fail if the input types aren't accepted\n            if (!Array.isArray(nameOrId) && typeof nameOrId !== 'number' && typeof nameOrId !== 'string') {\n                throw new Error('Param \"nameOrId\" must be a string, array of strings or array of string and/or numbers');\n            }\n            // If the user has submitted a Name or an ID, return the JSON promise\n            if (typeof nameOrId === 'number' || typeof nameOrId === 'string') {\n                return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}move-ailment/${nameOrId}/`, callback);\n            }\n            // If the user has submitted an Array return a new promise which will resolve when all getJSON calls are ended\n            const mapper = async (nameOrIds) => {\n                const queryRes = await getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}move-ailment/${nameOrIds}/`);\n                return queryRes;\n            };\n            // Fetch data asynchronously to be faster\n            const mappedResults = await pMap(nameOrId, mapper, { concurrency: 4 });\n            // Invoke the callback if we have one\n            if (callback) {\n                callback(mappedResults);\n            }\n            return mappedResults;\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getMoveBattleStyleByName(nameOrId, callback) {\n        try {\n            // Fail if the param is not supplied\n            if (!nameOrId) {\n                throw new Error('Param \"nameOrId\" is required (Must be a string, array of strings or array of string and/or numbers )');\n            }\n            // Fail if the input types aren't accepted\n            if (!Array.isArray(nameOrId) && typeof nameOrId !== 'number' && typeof nameOrId !== 'string') {\n                throw new Error('Param \"nameOrId\" must be a string, array of strings or array of string and/or numbers');\n            }\n            // If the user has submitted a Name or an ID, return the JSON promise\n            if (typeof nameOrId === 'number' || typeof nameOrId === 'string') {\n                return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}move-battle-style/${nameOrId}/`, callback);\n            }\n            // If the user has submitted an Array return a new promise which will resolve when all getJSON calls are ended\n            const mapper = async (nameOrIds) => {\n                const queryRes = await getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}move-battle-style/${nameOrIds}/`);\n                return queryRes;\n            };\n            // Fetch data asynchronously to be faster\n            const mappedResults = await pMap(nameOrId, mapper, { concurrency: 4 });\n            // Invoke the callback if we have one\n            if (callback) {\n                callback(mappedResults);\n            }\n            return mappedResults;\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getMoveCategoryByName(nameOrId, callback) {\n        try {\n            // Fail if the param is not supplied\n            if (!nameOrId) {\n                throw new Error('Param \"nameOrId\" is required (Must be a string, array of strings or array of string and/or numbers )');\n            }\n            // Fail if the input types aren't accepted\n            if (!Array.isArray(nameOrId) && typeof nameOrId !== 'number' && typeof nameOrId !== 'string') {\n                throw new Error('Param \"nameOrId\" must be a string, array of strings or array of string and/or numbers');\n            }\n            // If the user has submitted a Name or an ID, return the JSON promise\n            if (typeof nameOrId === 'number' || typeof nameOrId === 'string') {\n                return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}move-category/${nameOrId}/`, callback);\n            }\n            // If the user has submitted an Array return a new promise which will resolve when all getJSON calls are ended\n            const mapper = async (nameOrIds) => {\n                const queryRes = await getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}move-category/${nameOrIds}/`);\n                return queryRes;\n            };\n            // Fetch data asynchronously to be faster\n            const mappedResults = await pMap(nameOrId, mapper, { concurrency: 4 });\n            // Invoke the callback if we have one\n            if (callback) {\n                callback(mappedResults);\n            }\n            return mappedResults;\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getMoveDamageClassByName(nameOrId, callback) {\n        try {\n            // Fail if the param is not supplied\n            if (!nameOrId) {\n                throw new Error('Param \"nameOrId\" is required (Must be a string, array of strings or array of string and/or numbers )');\n            }\n            // Fail if the input types aren't accepted\n            if (!Array.isArray(nameOrId) && typeof nameOrId !== 'number' && typeof nameOrId !== 'string') {\n                throw new Error('Param \"nameOrId\" must be a string, array of strings or array of string and/or numbers');\n            }\n            // If the user has submitted a Name or an ID, return the JSON promise\n            if (typeof nameOrId === 'number' || typeof nameOrId === 'string') {\n                return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}move-damage-class/${nameOrId}/`, callback);\n            }\n            // If the user has submitted an Array return a new promise which will resolve when all getJSON calls are ended\n            const mapper = async (nameOrIds) => {\n                const queryRes = await getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}move-damage-class/${nameOrIds}/`);\n                return queryRes;\n            };\n            // Fetch data asynchronously to be faster\n            const mappedResults = await pMap(nameOrId, mapper, { concurrency: 4 });\n            // Invoke the callback if we have one\n            if (callback) {\n                callback(mappedResults);\n            }\n            return mappedResults;\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getMoveLearnMethodByName(nameOrId, callback) {\n        try {\n            // Fail if the param is not supplied\n            if (!nameOrId) {\n                throw new Error('Param \"nameOrId\" is required (Must be a string, array of strings or array of string and/or numbers )');\n            }\n            // Fail if the input types aren't accepted\n            if (!Array.isArray(nameOrId) && typeof nameOrId !== 'number' && typeof nameOrId !== 'string') {\n                throw new Error('Param \"nameOrId\" must be a string, array of strings or array of string and/or numbers');\n            }\n            // If the user has submitted a Name or an ID, return the JSON promise\n            if (typeof nameOrId === 'number' || typeof nameOrId === 'string') {\n                return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}move-learn-method/${nameOrId}/`, callback);\n            }\n            // If the user has submitted an Array return a new promise which will resolve when all getJSON calls are ended\n            const mapper = async (nameOrIds) => {\n                const queryRes = await getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}move-learn-method/${nameOrIds}/`);\n                return queryRes;\n            };\n            // Fetch data asynchronously to be faster\n            const mappedResults = await pMap(nameOrId, mapper, { concurrency: 4 });\n            // Invoke the callback if we have one\n            if (callback) {\n                callback(mappedResults);\n            }\n            return mappedResults;\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getMoveTargetByName(nameOrId, callback) {\n        try {\n            // Fail if the param is not supplied\n            if (!nameOrId) {\n                throw new Error('Param \"nameOrId\" is required (Must be a string, array of strings or array of string and/or numbers )');\n            }\n            // Fail if the input types aren't accepted\n            if (!Array.isArray(nameOrId) && typeof nameOrId !== 'number' && typeof nameOrId !== 'string') {\n                throw new Error('Param \"nameOrId\" must be a string, array of strings or array of string and/or numbers');\n            }\n            // If the user has submitted a Name or an ID, return the JSON promise\n            if (typeof nameOrId === 'number' || typeof nameOrId === 'string') {\n                return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}move-target/${nameOrId}/`, callback);\n            }\n            // If the user has submitted an Array return a new promise which will resolve when all getJSON calls are ended\n            const mapper = async (nameOrIds) => {\n                const queryRes = await getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}move-target/${nameOrIds}/`);\n                return queryRes;\n            };\n            // Fetch data asynchronously to be faster\n            const mappedResults = await pMap(nameOrId, mapper, { concurrency: 4 });\n            // Invoke the callback if we have one\n            if (callback) {\n                callback(mappedResults);\n            }\n            return mappedResults;\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getLocationByName(nameOrId, callback) {\n        try {\n            // Fail if the param is not supplied\n            if (!nameOrId) {\n                throw new Error('Param \"nameOrId\" is required (Must be a string, array of strings or array of string and/or numbers )');\n            }\n            // Fail if the input types aren't accepted\n            if (!Array.isArray(nameOrId) && typeof nameOrId !== 'number' && typeof nameOrId !== 'string') {\n                throw new Error('Param \"nameOrId\" must be a string, array of strings or array of string and/or numbers');\n            }\n            // If the user has submitted a Name or an ID, return the JSON promise\n            if (typeof nameOrId === 'number' || typeof nameOrId === 'string') {\n                return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}location/${nameOrId}/`, callback);\n            }\n            // If the user has submitted an Array return a new promise which will resolve when all getJSON calls are ended\n            const mapper = async (nameOrIds) => {\n                const queryRes = await getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}location/${nameOrIds}/`);\n                return queryRes;\n            };\n            // Fetch data asynchronously to be faster\n            const mappedResults = await pMap(nameOrId, mapper, { concurrency: 4 });\n            // Invoke the callback if we have one\n            if (callback) {\n                callback(mappedResults);\n            }\n            return mappedResults;\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getLocationAreaByName(nameOrId, callback) {\n        try {\n            // Fail if the param is not supplied\n            if (!nameOrId) {\n                throw new Error('Param \"nameOrId\" is required (Must be a string, array of strings or array of string and/or numbers )');\n            }\n            // Fail if the input types aren't accepted\n            if (!Array.isArray(nameOrId) && typeof nameOrId !== 'number' && typeof nameOrId !== 'string') {\n                throw new Error('Param \"nameOrId\" must be a string, array of strings or array of string and/or numbers');\n            }\n            // If the user has submitted a Name or an ID, return the JSON promise\n            if (typeof nameOrId === 'number' || typeof nameOrId === 'string') {\n                return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}location-area/${nameOrId}/`, callback);\n            }\n            // If the user has submitted an Array return a new promise which will resolve when all getJSON calls are ended\n            const mapper = async (nameOrIds) => {\n                const queryRes = await getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}location-area/${nameOrIds}/`);\n                return queryRes;\n            };\n            // Fetch data asynchronously to be faster\n            const mappedResults = await pMap(nameOrId, mapper, { concurrency: 4 });\n            // Invoke the callback if we have one\n            if (callback) {\n                callback(mappedResults);\n            }\n            return mappedResults;\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getPalParkAreaByName(nameOrId, callback) {\n        try {\n            // Fail if the param is not supplied\n            if (!nameOrId) {\n                throw new Error('Param \"nameOrId\" is required (Must be a string, array of strings or array of string and/or numbers )');\n            }\n            // Fail if the input types aren't accepted\n            if (!Array.isArray(nameOrId) && typeof nameOrId !== 'number' && typeof nameOrId !== 'string') {\n                throw new Error('Param \"nameOrId\" must be a string, array of strings or array of string and/or numbers');\n            }\n            // If the user has submitted a Name or an ID, return the JSON promise\n            if (typeof nameOrId === 'number' || typeof nameOrId === 'string') {\n                return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}pal-park-area/${nameOrId}/`, callback);\n            }\n            // If the user has submitted an Array return a new promise which will resolve when all getJSON calls are ended\n            const mapper = async (nameOrIds) => {\n                const queryRes = await getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}pal-park-area/${nameOrIds}/`);\n                return queryRes;\n            };\n            // Fetch data asynchronously to be faster\n            const mappedResults = await pMap(nameOrId, mapper, { concurrency: 4 });\n            // Invoke the callback if we have one\n            if (callback) {\n                callback(mappedResults);\n            }\n            return mappedResults;\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getRegionByName(nameOrId, callback) {\n        try {\n            // Fail if the param is not supplied\n            if (!nameOrId) {\n                throw new Error('Param \"nameOrId\" is required (Must be a string, array of strings or array of string and/or numbers )');\n            }\n            // Fail if the input types aren't accepted\n            if (!Array.isArray(nameOrId) && typeof nameOrId !== 'number' && typeof nameOrId !== 'string') {\n                throw new Error('Param \"nameOrId\" must be a string, array of strings or array of string and/or numbers');\n            }\n            // If the user has submitted a Name or an ID, return the JSON promise\n            if (typeof nameOrId === 'number' || typeof nameOrId === 'string') {\n                return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}region/${nameOrId}/`, callback);\n            }\n            // If the user has submitted an Array return a new promise which will resolve when all getJSON calls are ended\n            const mapper = async (nameOrIds) => {\n                const queryRes = await getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}region/${nameOrIds}/`);\n                return queryRes;\n            };\n            // Fetch data asynchronously to be faster\n            const mappedResults = await pMap(nameOrId, mapper, { concurrency: 4 });\n            // Invoke the callback if we have one\n            if (callback) {\n                callback(mappedResults);\n            }\n            return mappedResults;\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getAbilityByName(nameOrId, callback) {\n        try {\n            // Fail if the param is not supplied\n            if (!nameOrId) {\n                throw new Error('Param \"nameOrId\" is required (Must be a string, array of strings or array of string and/or numbers )');\n            }\n            // Fail if the input types aren't accepted\n            if (!Array.isArray(nameOrId) && typeof nameOrId !== 'number' && typeof nameOrId !== 'string') {\n                throw new Error('Param \"nameOrId\" must be a string, array of strings or array of string and/or numbers');\n            }\n            // If the user has submitted a Name or an ID, return the JSON promise\n            if (typeof nameOrId === 'number' || typeof nameOrId === 'string') {\n                return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}ability/${nameOrId}/`, callback);\n            }\n            // If the user has submitted an Array return a new promise which will resolve when all getJSON calls are ended\n            const mapper = async (nameOrIds) => {\n                const queryRes = await getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}ability/${nameOrIds}/`);\n                return queryRes;\n            };\n            // Fetch data asynchronously to be faster\n            const mappedResults = await pMap(nameOrId, mapper, { concurrency: 4 });\n            // Invoke the callback if we have one\n            if (callback) {\n                callback(mappedResults);\n            }\n            return mappedResults;\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getCharacteristicById(id, callback) {\n        try {\n            // Fail if the param is not supplied\n            if (!id) {\n                throw new Error('Param \"id\" is required (Must be a number or array of numbers )');\n            }\n            // Fail if the input types aren't accepted\n            if (!Array.isArray(id) && typeof id !== 'number' && typeof id !== 'string') {\n                throw new Error('Param \"id\" must be a number or array of numbers');\n            }\n            // If the user has submitted a Name or an ID, return the JSON promise\n            if (typeof id === 'number' || typeof id === 'string') {\n                return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}characteristic/${id}/`, callback);\n            }\n            // If the user has submitted an Array return a new promise which will resolve when all getJSON calls are ended\n            const mapper = async (ids) => {\n                const queryRes = await getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}characteristic/${ids}/`);\n                return queryRes;\n            };\n            // Fetch data asynchronously to be faster\n            const mappedResults = await pMap(id, mapper, { concurrency: 4 });\n            // Invoke the callback if we have one\n            if (callback) {\n                callback(mappedResults);\n            }\n            return mappedResults;\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getEggGroupByName(nameOrId, callback) {\n        try {\n            // Fail if the param is not supplied\n            if (!nameOrId) {\n                throw new Error('Param \"nameOrId\" is required (Must be a string, array of strings or array of string and/or numbers )');\n            }\n            // Fail if the input types aren't accepted\n            if (!Array.isArray(nameOrId) && typeof nameOrId !== 'number' && typeof nameOrId !== 'string') {\n                throw new Error('Param \"nameOrId\" must be a string, array of strings or array of string and/or numbers');\n            }\n            // If the user has submitted a Name or an ID, return the JSON promise\n            if (typeof nameOrId === 'number' || typeof nameOrId === 'string') {\n                return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}egg-group/${nameOrId}/`, callback);\n            }\n            // If the user has submitted an Array return a new promise which will resolve when all getJSON calls are ended\n            const mapper = async (nameOrIds) => {\n                const queryRes = await getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}egg-group/${nameOrIds}/`);\n                return queryRes;\n            };\n            // Fetch data asynchronously to be faster\n            const mappedResults = await pMap(nameOrId, mapper, { concurrency: 4 });\n            // Invoke the callback if we have one\n            if (callback) {\n                callback(mappedResults);\n            }\n            return mappedResults;\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getGenderByName(nameOrId, callback) {\n        try {\n            // Fail if the param is not supplied\n            if (!nameOrId) {\n                throw new Error('Param \"nameOrId\" is required (Must be a string, array of strings or array of string and/or numbers )');\n            }\n            // Fail if the input types aren't accepted\n            if (!Array.isArray(nameOrId) && typeof nameOrId !== 'number' && typeof nameOrId !== 'string') {\n                throw new Error('Param \"nameOrId\" must be a string, array of strings or array of string and/or numbers');\n            }\n            // If the user has submitted a Name or an ID, return the JSON promise\n            if (typeof nameOrId === 'number' || typeof nameOrId === 'string') {\n                return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}gender/${nameOrId}/`, callback);\n            }\n            // If the user has submitted an Array return a new promise which will resolve when all getJSON calls are ended\n            const mapper = async (nameOrIds) => {\n                const queryRes = await getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}gender/${nameOrIds}/`);\n                return queryRes;\n            };\n            // Fetch data asynchronously to be faster\n            const mappedResults = await pMap(nameOrId, mapper, { concurrency: 4 });\n            // Invoke the callback if we have one\n            if (callback) {\n                callback(mappedResults);\n            }\n            return mappedResults;\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getGrowthRateByName(nameOrId, callback) {\n        try {\n            // Fail if the param is not supplied\n            if (!nameOrId) {\n                throw new Error('Param \"nameOrId\" is required (Must be a string, array of strings or array of string and/or numbers )');\n            }\n            // Fail if the input types aren't accepted\n            if (!Array.isArray(nameOrId) && typeof nameOrId !== 'number' && typeof nameOrId !== 'string') {\n                throw new Error('Param \"nameOrId\" must be a string, array of strings or array of string and/or numbers');\n            }\n            // If the user has submitted a Name or an ID, return the JSON promise\n            if (typeof nameOrId === 'number' || typeof nameOrId === 'string') {\n                return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}growth-rate/${nameOrId}/`, callback);\n            }\n            // If the user has submitted an Array return a new promise which will resolve when all getJSON calls are ended\n            const mapper = async (nameOrIds) => {\n                const queryRes = await getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}growth-rate/${nameOrIds}/`);\n                return queryRes;\n            };\n            // Fetch data asynchronously to be faster\n            const mappedResults = await pMap(nameOrId, mapper, { concurrency: 4 });\n            // Invoke the callback if we have one\n            if (callback) {\n                callback(mappedResults);\n            }\n            return mappedResults;\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getNatureByName(nameOrId, callback) {\n        try {\n            // Fail if the param is not supplied\n            if (!nameOrId) {\n                throw new Error('Param \"nameOrId\" is required (Must be a string, array of strings or array of string and/or numbers )');\n            }\n            // Fail if the input types aren't accepted\n            if (!Array.isArray(nameOrId) && typeof nameOrId !== 'number' && typeof nameOrId !== 'string') {\n                throw new Error('Param \"nameOrId\" must be a string, array of strings or array of string and/or numbers');\n            }\n            // If the user has submitted a Name or an ID, return the JSON promise\n            if (typeof nameOrId === 'number' || typeof nameOrId === 'string') {\n                return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}nature/${nameOrId}/`, callback);\n            }\n            // If the user has submitted an Array return a new promise which will resolve when all getJSON calls are ended\n            const mapper = async (nameOrIds) => {\n                const queryRes = await getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}nature/${nameOrIds}/`);\n                return queryRes;\n            };\n            // Fetch data asynchronously to be faster\n            const mappedResults = await pMap(nameOrId, mapper, { concurrency: 4 });\n            // Invoke the callback if we have one\n            if (callback) {\n                callback(mappedResults);\n            }\n            return mappedResults;\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getPokeathlonStatByName(nameOrId, callback) {\n        try {\n            // Fail if the param is not supplied\n            if (!nameOrId) {\n                throw new Error('Param \"nameOrId\" is required (Must be a string, array of strings or array of string and/or numbers )');\n            }\n            // Fail if the input types aren't accepted\n            if (!Array.isArray(nameOrId) && typeof nameOrId !== 'number' && typeof nameOrId !== 'string') {\n                throw new Error('Param \"nameOrId\" must be a string, array of strings or array of string and/or numbers');\n            }\n            // If the user has submitted a Name or an ID, return the JSON promise\n            if (typeof nameOrId === 'number' || typeof nameOrId === 'string') {\n                return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}pokeathlon-stat/${nameOrId}/`, callback);\n            }\n            // If the user has submitted an Array return a new promise which will resolve when all getJSON calls are ended\n            const mapper = async (nameOrIds) => {\n                const queryRes = await getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}pokeathlon-stat/${nameOrIds}/`);\n                return queryRes;\n            };\n            // Fetch data asynchronously to be faster\n            const mappedResults = await pMap(nameOrId, mapper, { concurrency: 4 });\n            // Invoke the callback if we have one\n            if (callback) {\n                callback(mappedResults);\n            }\n            return mappedResults;\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getPokemonByName(nameOrId, callback) {\n        try {\n            // Fail if the param is not supplied\n            if (!nameOrId) {\n                throw new Error('Param \"nameOrId\" is required (Must be a string, array of strings or array of string and/or numbers )');\n            }\n            // Fail if the input types aren't accepted\n            if (!Array.isArray(nameOrId) && typeof nameOrId !== 'number' && typeof nameOrId !== 'string') {\n                throw new Error('Param \"nameOrId\" must be a string, array of strings or array of string and/or numbers');\n            }\n            // If the user has submitted a Name or an ID, return the JSON promise\n            if (typeof nameOrId === 'number' || typeof nameOrId === 'string') {\n                return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}pokemon/${nameOrId}/`, callback);\n            }\n            // If the user has submitted an Array return a new promise which will resolve when all getJSON calls are ended\n            const mapper = async (nameOrIds) => {\n                const queryRes = await getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}pokemon/${nameOrIds}/`);\n                return queryRes;\n            };\n            // Fetch data asynchronously to be faster\n            const mappedResults = await pMap(nameOrId, mapper, { concurrency: 4 });\n            // Invoke the callback if we have one\n            if (callback) {\n                callback(mappedResults);\n            }\n            return mappedResults;\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getPokemonColorByName(nameOrId, callback) {\n        try {\n            // Fail if the param is not supplied\n            if (!nameOrId) {\n                throw new Error('Param \"nameOrId\" is required (Must be a string, array of strings or array of string and/or numbers )');\n            }\n            // Fail if the input types aren't accepted\n            if (!Array.isArray(nameOrId) && typeof nameOrId !== 'number' && typeof nameOrId !== 'string') {\n                throw new Error('Param \"nameOrId\" must be a string, array of strings or array of string and/or numbers');\n            }\n            // If the user has submitted a Name or an ID, return the JSON promise\n            if (typeof nameOrId === 'number' || typeof nameOrId === 'string') {\n                return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}pokemon-color/${nameOrId}/`, callback);\n            }\n            // If the user has submitted an Array return a new promise which will resolve when all getJSON calls are ended\n            const mapper = async (nameOrIds) => {\n                const queryRes = await getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}pokemon-color/${nameOrIds}/`);\n                return queryRes;\n            };\n            // Fetch data asynchronously to be faster\n            const mappedResults = await pMap(nameOrId, mapper, { concurrency: 4 });\n            // Invoke the callback if we have one\n            if (callback) {\n                callback(mappedResults);\n            }\n            return mappedResults;\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getPokemonFormByName(nameOrId, callback) {\n        try {\n            // Fail if the param is not supplied\n            if (!nameOrId) {\n                throw new Error('Param \"nameOrId\" is required (Must be a string, array of strings or array of string and/or numbers )');\n            }\n            // Fail if the input types aren't accepted\n            if (!Array.isArray(nameOrId) && typeof nameOrId !== 'number' && typeof nameOrId !== 'string') {\n                throw new Error('Param \"nameOrId\" must be a string, array of strings or array of string and/or numbers');\n            }\n            // If the user has submitted a Name or an ID, return the JSON promise\n            if (typeof nameOrId === 'number' || typeof nameOrId === 'string') {\n                return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}pokemon-form/${nameOrId}/`, callback);\n            }\n            // If the user has submitted an Array return a new promise which will resolve when all getJSON calls are ended\n            const mapper = async (nameOrIds) => {\n                const queryRes = await getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}pokemon-form/${nameOrIds}/`);\n                return queryRes;\n            };\n            // Fetch data asynchronously to be faster\n            const mappedResults = await pMap(nameOrId, mapper, { concurrency: 4 });\n            // Invoke the callback if we have one\n            if (callback) {\n                callback(mappedResults);\n            }\n            return mappedResults;\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getPokemonHabitatByName(nameOrId, callback) {\n        try {\n            // Fail if the param is not supplied\n            if (!nameOrId) {\n                throw new Error('Param \"nameOrId\" is required (Must be a string, array of strings or array of string and/or numbers )');\n            }\n            // Fail if the input types aren't accepted\n            if (!Array.isArray(nameOrId) && typeof nameOrId !== 'number' && typeof nameOrId !== 'string') {\n                throw new Error('Param \"nameOrId\" must be a string, array of strings or array of string and/or numbers');\n            }\n            // If the user has submitted a Name or an ID, return the JSON promise\n            if (typeof nameOrId === 'number' || typeof nameOrId === 'string') {\n                return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}pokemon-habitat/${nameOrId}/`, callback);\n            }\n            // If the user has submitted an Array return a new promise which will resolve when all getJSON calls are ended\n            const mapper = async (nameOrIds) => {\n                const queryRes = await getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}pokemon-habitat/${nameOrIds}/`);\n                return queryRes;\n            };\n            // Fetch data asynchronously to be faster\n            const mappedResults = await pMap(nameOrId, mapper, { concurrency: 4 });\n            // Invoke the callback if we have one\n            if (callback) {\n                callback(mappedResults);\n            }\n            return mappedResults;\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getPokemonShapeByName(nameOrId, callback) {\n        try {\n            // Fail if the param is not supplied\n            if (!nameOrId) {\n                throw new Error('Param \"nameOrId\" is required (Must be a string, array of strings or array of string and/or numbers )');\n            }\n            // Fail if the input types aren't accepted\n            if (!Array.isArray(nameOrId) && typeof nameOrId !== 'number' && typeof nameOrId !== 'string') {\n                throw new Error('Param \"nameOrId\" must be a string, array of strings or array of string and/or numbers');\n            }\n            // If the user has submitted a Name or an ID, return the JSON promise\n            if (typeof nameOrId === 'number' || typeof nameOrId === 'string') {\n                return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}pokemon-shape/${nameOrId}/`, callback);\n            }\n            // If the user has submitted an Array return a new promise which will resolve when all getJSON calls are ended\n            const mapper = async (nameOrIds) => {\n                const queryRes = await getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}pokemon-shape/${nameOrIds}/`);\n                return queryRes;\n            };\n            // Fetch data asynchronously to be faster\n            const mappedResults = await pMap(nameOrId, mapper, { concurrency: 4 });\n            // Invoke the callback if we have one\n            if (callback) {\n                callback(mappedResults);\n            }\n            return mappedResults;\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getPokemonSpeciesByName(nameOrId, callback) {\n        try {\n            // Fail if the param is not supplied\n            if (!nameOrId) {\n                throw new Error('Param \"nameOrId\" is required (Must be a string, array of strings or array of string and/or numbers )');\n            }\n            // Fail if the input types aren't accepted\n            if (!Array.isArray(nameOrId) && typeof nameOrId !== 'number' && typeof nameOrId !== 'string') {\n                throw new Error('Param \"nameOrId\" must be a string, array of strings or array of string and/or numbers');\n            }\n            // If the user has submitted a Name or an ID, return the JSON promise\n            if (typeof nameOrId === 'number' || typeof nameOrId === 'string') {\n                return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}pokemon-species/${nameOrId}/`, callback);\n            }\n            // If the user has submitted an Array return a new promise which will resolve when all getJSON calls are ended\n            const mapper = async (nameOrIds) => {\n                const queryRes = await getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}pokemon-species/${nameOrIds}/`);\n                return queryRes;\n            };\n            // Fetch data asynchronously to be faster\n            const mappedResults = await pMap(nameOrId, mapper, { concurrency: 4 });\n            // Invoke the callback if we have one\n            if (callback) {\n                callback(mappedResults);\n            }\n            return mappedResults;\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getStatByName(nameOrId, callback) {\n        try {\n            // Fail if the param is not supplied\n            if (!nameOrId) {\n                throw new Error('Param \"nameOrId\" is required (Must be a string, array of strings or array of string and/or numbers )');\n            }\n            // Fail if the input types aren't accepted\n            if (!Array.isArray(nameOrId) && typeof nameOrId !== 'number' && typeof nameOrId !== 'string') {\n                throw new Error('Param \"nameOrId\" must be a string, array of strings or array of string and/or numbers');\n            }\n            // If the user has submitted a Name or an ID, return the JSON promise\n            if (typeof nameOrId === 'number' || typeof nameOrId === 'string') {\n                return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}stat/${nameOrId}/`, callback);\n            }\n            // If the user has submitted an Array return a new promise which will resolve when all getJSON calls are ended\n            const mapper = async (nameOrIds) => {\n                const queryRes = await getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}stat/${nameOrIds}/`);\n                return queryRes;\n            };\n            // Fetch data asynchronously to be faster\n            const mappedResults = await pMap(nameOrId, mapper, { concurrency: 4 });\n            // Invoke the callback if we have one\n            if (callback) {\n                callback(mappedResults);\n            }\n            return mappedResults;\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getTypeByName(nameOrId, callback) {\n        try {\n            // Fail if the param is not supplied\n            if (!nameOrId) {\n                throw new Error('Param \"nameOrId\" is required (Must be a string, array of strings or array of string and/or numbers )');\n            }\n            // Fail if the input types aren't accepted\n            if (!Array.isArray(nameOrId) && typeof nameOrId !== 'number' && typeof nameOrId !== 'string') {\n                throw new Error('Param \"nameOrId\" must be a string, array of strings or array of string and/or numbers');\n            }\n            // If the user has submitted a Name or an ID, return the JSON promise\n            if (typeof nameOrId === 'number' || typeof nameOrId === 'string') {\n                return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}type/${nameOrId}/`, callback);\n            }\n            // If the user has submitted an Array return a new promise which will resolve when all getJSON calls are ended\n            const mapper = async (nameOrIds) => {\n                const queryRes = await getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}type/${nameOrIds}/`);\n                return queryRes;\n            };\n            // Fetch data asynchronously to be faster\n            const mappedResults = await pMap(nameOrId, mapper, { concurrency: 4 });\n            // Invoke the callback if we have one\n            if (callback) {\n                callback(mappedResults);\n            }\n            return mappedResults;\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getLanguageByName(nameOrId, callback) {\n        try {\n            // Fail if the param is not supplied\n            if (!nameOrId) {\n                throw new Error('Param \"nameOrId\" is required (Must be a string, array of strings or array of string and/or numbers )');\n            }\n            // Fail if the input types aren't accepted\n            if (!Array.isArray(nameOrId) && typeof nameOrId !== 'number' && typeof nameOrId !== 'string') {\n                throw new Error('Param \"nameOrId\" must be a string, array of strings or array of string and/or numbers');\n            }\n            // If the user has submitted a Name or an ID, return the JSON promise\n            if (typeof nameOrId === 'number' || typeof nameOrId === 'string') {\n                return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}language/${nameOrId}/`, callback);\n            }\n            // If the user has submitted an Array return a new promise which will resolve when all getJSON calls are ended\n            const mapper = async (nameOrIds) => {\n                const queryRes = await getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}language/${nameOrIds}/`);\n                return queryRes;\n            };\n            // Fetch data asynchronously to be faster\n            const mappedResults = await pMap(nameOrId, mapper, { concurrency: 4 });\n            // Invoke the callback if we have one\n            if (callback) {\n                callback(mappedResults);\n            }\n            return mappedResults;\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getBerriesList(interval, callback) {\n        try {\n            let { limit, offset } = this.options;\n            if (interval) {\n                if (interval.hasOwnProperty('limit')) {\n                    limit = interval.limit;\n                }\n                if (interval.hasOwnProperty('offset')) {\n                    offset = interval.offset;\n                }\n            }\n            return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}berry/?limit=${limit}&offset=${offset}`, callback);\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getBerriesFirmnessList(interval, callback) {\n        try {\n            let { limit, offset } = this.options;\n            if (interval) {\n                if (interval.hasOwnProperty('limit')) {\n                    limit = interval.limit;\n                }\n                if (interval.hasOwnProperty('offset')) {\n                    offset = interval.offset;\n                }\n            }\n            return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}berry-firmness/?limit=${limit}&offset=${offset}`, callback);\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    /** @deprecated will be removed on a future version. Use {@link getBerriesFirmnessList} instead */\n    async getBerriesFirmnesssList(interval, callback) {\n        try {\n            let { limit, offset } = this.options;\n            if (interval) {\n                if (interval.hasOwnProperty('limit')) {\n                    limit = interval.limit;\n                }\n                if (interval.hasOwnProperty('offset')) {\n                    offset = interval.offset;\n                }\n            }\n            return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}berry-firmness/?limit=${limit}&offset=${offset}`, callback);\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getBerriesFlavorsList(interval, callback) {\n        try {\n            let { limit, offset } = this.options;\n            if (interval) {\n                if (interval.hasOwnProperty('limit')) {\n                    limit = interval.limit;\n                }\n                if (interval.hasOwnProperty('offset')) {\n                    offset = interval.offset;\n                }\n            }\n            return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}berry-flavor/?limit=${limit}&offset=${offset}`, callback);\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getContestTypesList(interval, callback) {\n        try {\n            let { limit, offset } = this.options;\n            if (interval) {\n                if (interval.hasOwnProperty('limit')) {\n                    limit = interval.limit;\n                }\n                if (interval.hasOwnProperty('offset')) {\n                    offset = interval.offset;\n                }\n            }\n            return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}contest-type/?limit=${limit}&offset=${offset}`, callback);\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getContestEffectsList(interval, callback) {\n        try {\n            let { limit, offset } = this.options;\n            if (interval) {\n                if (interval.hasOwnProperty('limit')) {\n                    limit = interval.limit;\n                }\n                if (interval.hasOwnProperty('offset')) {\n                    offset = interval.offset;\n                }\n            }\n            return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}contest-effect/?limit=${limit}&offset=${offset}`, callback);\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getSuperContestEffectsList(interval, callback) {\n        try {\n            let { limit, offset } = this.options;\n            if (interval) {\n                if (interval.hasOwnProperty('limit')) {\n                    limit = interval.limit;\n                }\n                if (interval.hasOwnProperty('offset')) {\n                    offset = interval.offset;\n                }\n            }\n            return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}super-contest-effect/?limit=${limit}&offset=${offset}`, callback);\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getEncounterMethodsList(interval, callback) {\n        try {\n            let { limit, offset } = this.options;\n            if (interval) {\n                if (interval.hasOwnProperty('limit')) {\n                    limit = interval.limit;\n                }\n                if (interval.hasOwnProperty('offset')) {\n                    offset = interval.offset;\n                }\n            }\n            return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}encounter-method/?limit=${limit}&offset=${offset}`, callback);\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getEncounterConditionsList(interval, callback) {\n        try {\n            let { limit, offset } = this.options;\n            if (interval) {\n                if (interval.hasOwnProperty('limit')) {\n                    limit = interval.limit;\n                }\n                if (interval.hasOwnProperty('offset')) {\n                    offset = interval.offset;\n                }\n            }\n            return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}encounter-condition/?limit=${limit}&offset=${offset}`, callback);\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getEncounterConditionValuesList(interval, callback) {\n        try {\n            let { limit, offset } = this.options;\n            if (interval) {\n                if (interval.hasOwnProperty('limit')) {\n                    limit = interval.limit;\n                }\n                if (interval.hasOwnProperty('offset')) {\n                    offset = interval.offset;\n                }\n            }\n            return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}encounter-condition-value/?limit=${limit}&offset=${offset}`, callback);\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getEvolutionChainsList(interval, callback) {\n        try {\n            let { limit, offset } = this.options;\n            if (interval) {\n                if (interval.hasOwnProperty('limit')) {\n                    limit = interval.limit;\n                }\n                if (interval.hasOwnProperty('offset')) {\n                    offset = interval.offset;\n                }\n            }\n            return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}evolution-chain/?limit=${limit}&offset=${offset}`, callback);\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getEvolutionTriggersList(interval, callback) {\n        try {\n            let { limit, offset } = this.options;\n            if (interval) {\n                if (interval.hasOwnProperty('limit')) {\n                    limit = interval.limit;\n                }\n                if (interval.hasOwnProperty('offset')) {\n                    offset = interval.offset;\n                }\n            }\n            return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}evolution-trigger/?limit=${limit}&offset=${offset}`, callback);\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getGenerationsList(interval, callback) {\n        try {\n            let { limit, offset } = this.options;\n            if (interval) {\n                if (interval.hasOwnProperty('limit')) {\n                    limit = interval.limit;\n                }\n                if (interval.hasOwnProperty('offset')) {\n                    offset = interval.offset;\n                }\n            }\n            return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}generation/?limit=${limit}&offset=${offset}`, callback);\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    /** @deprecated will be removed on a future version. Use {@link getPokedexList} instead */\n    async getPokedexsList(interval, callback) {\n        try {\n            let { limit, offset } = this.options;\n            if (interval) {\n                if (interval.hasOwnProperty('limit')) {\n                    limit = interval.limit;\n                }\n                if (interval.hasOwnProperty('offset')) {\n                    offset = interval.offset;\n                }\n            }\n            return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}pokedex/?limit=${limit}&offset=${offset}`, callback);\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getPokedexList(interval, callback) {\n        try {\n            let { limit, offset } = this.options;\n            if (interval) {\n                if (interval.hasOwnProperty('limit')) {\n                    limit = interval.limit;\n                }\n                if (interval.hasOwnProperty('offset')) {\n                    offset = interval.offset;\n                }\n            }\n            return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}pokedex/?limit=${limit}&offset=${offset}`, callback);\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getVersionsList(interval, callback) {\n        try {\n            let { limit, offset } = this.options;\n            if (interval) {\n                if (interval.hasOwnProperty('limit')) {\n                    limit = interval.limit;\n                }\n                if (interval.hasOwnProperty('offset')) {\n                    offset = interval.offset;\n                }\n            }\n            return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}version/?limit=${limit}&offset=${offset}`, callback);\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getVersionGroupsList(interval, callback) {\n        try {\n            let { limit, offset } = this.options;\n            if (interval) {\n                if (interval.hasOwnProperty('limit')) {\n                    limit = interval.limit;\n                }\n                if (interval.hasOwnProperty('offset')) {\n                    offset = interval.offset;\n                }\n            }\n            return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}version-group/?limit=${limit}&offset=${offset}`, callback);\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getItemsList(interval, callback) {\n        try {\n            let { limit, offset } = this.options;\n            if (interval) {\n                if (interval.hasOwnProperty('limit')) {\n                    limit = interval.limit;\n                }\n                if (interval.hasOwnProperty('offset')) {\n                    offset = interval.offset;\n                }\n            }\n            return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}item/?limit=${limit}&offset=${offset}`, callback);\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getItemAttributesList(interval, callback) {\n        try {\n            let { limit, offset } = this.options;\n            if (interval) {\n                if (interval.hasOwnProperty('limit')) {\n                    limit = interval.limit;\n                }\n                if (interval.hasOwnProperty('offset')) {\n                    offset = interval.offset;\n                }\n            }\n            return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}item-attribute/?limit=${limit}&offset=${offset}`, callback);\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getItemCategoriesList(interval, callback) {\n        try {\n            let { limit, offset } = this.options;\n            if (interval) {\n                if (interval.hasOwnProperty('limit')) {\n                    limit = interval.limit;\n                }\n                if (interval.hasOwnProperty('offset')) {\n                    offset = interval.offset;\n                }\n            }\n            return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}item-category/?limit=${limit}&offset=${offset}`, callback);\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getItemFlingEffectsList(interval, callback) {\n        try {\n            let { limit, offset } = this.options;\n            if (interval) {\n                if (interval.hasOwnProperty('limit')) {\n                    limit = interval.limit;\n                }\n                if (interval.hasOwnProperty('offset')) {\n                    offset = interval.offset;\n                }\n            }\n            return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}item-fling-effect/?limit=${limit}&offset=${offset}`, callback);\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getItemPocketsList(interval, callback) {\n        try {\n            let { limit, offset } = this.options;\n            if (interval) {\n                if (interval.hasOwnProperty('limit')) {\n                    limit = interval.limit;\n                }\n                if (interval.hasOwnProperty('offset')) {\n                    offset = interval.offset;\n                }\n            }\n            return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}item-pocket/?limit=${limit}&offset=${offset}`, callback);\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getMachinesList(interval, callback) {\n        try {\n            let { limit, offset } = this.options;\n            if (interval) {\n                if (interval.hasOwnProperty('limit')) {\n                    limit = interval.limit;\n                }\n                if (interval.hasOwnProperty('offset')) {\n                    offset = interval.offset;\n                }\n            }\n            return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}machine/?limit=${limit}&offset=${offset}`, callback);\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getMovesList(interval, callback) {\n        try {\n            let { limit, offset } = this.options;\n            if (interval) {\n                if (interval.hasOwnProperty('limit')) {\n                    limit = interval.limit;\n                }\n                if (interval.hasOwnProperty('offset')) {\n                    offset = interval.offset;\n                }\n            }\n            return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}move/?limit=${limit}&offset=${offset}`, callback);\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getMoveAilmentsList(interval, callback) {\n        try {\n            let { limit, offset } = this.options;\n            if (interval) {\n                if (interval.hasOwnProperty('limit')) {\n                    limit = interval.limit;\n                }\n                if (interval.hasOwnProperty('offset')) {\n                    offset = interval.offset;\n                }\n            }\n            return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}move-ailment/?limit=${limit}&offset=${offset}`, callback);\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getMoveBattleStylesList(interval, callback) {\n        try {\n            let { limit, offset } = this.options;\n            if (interval) {\n                if (interval.hasOwnProperty('limit')) {\n                    limit = interval.limit;\n                }\n                if (interval.hasOwnProperty('offset')) {\n                    offset = interval.offset;\n                }\n            }\n            return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}move-battle-style/?limit=${limit}&offset=${offset}`, callback);\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getMoveCategoriesList(interval, callback) {\n        try {\n            let { limit, offset } = this.options;\n            if (interval) {\n                if (interval.hasOwnProperty('limit')) {\n                    limit = interval.limit;\n                }\n                if (interval.hasOwnProperty('offset')) {\n                    offset = interval.offset;\n                }\n            }\n            return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}move-category/?limit=${limit}&offset=${offset}`, callback);\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getMoveDamageClassesList(interval, callback) {\n        try {\n            let { limit, offset } = this.options;\n            if (interval) {\n                if (interval.hasOwnProperty('limit')) {\n                    limit = interval.limit;\n                }\n                if (interval.hasOwnProperty('offset')) {\n                    offset = interval.offset;\n                }\n            }\n            return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}move-damage-class/?limit=${limit}&offset=${offset}`, callback);\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getMoveLearnMethodsList(interval, callback) {\n        try {\n            let { limit, offset } = this.options;\n            if (interval) {\n                if (interval.hasOwnProperty('limit')) {\n                    limit = interval.limit;\n                }\n                if (interval.hasOwnProperty('offset')) {\n                    offset = interval.offset;\n                }\n            }\n            return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}move-learn-method/?limit=${limit}&offset=${offset}`, callback);\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getMoveTargetsList(interval, callback) {\n        try {\n            let { limit, offset } = this.options;\n            if (interval) {\n                if (interval.hasOwnProperty('limit')) {\n                    limit = interval.limit;\n                }\n                if (interval.hasOwnProperty('offset')) {\n                    offset = interval.offset;\n                }\n            }\n            return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}move-target/?limit=${limit}&offset=${offset}`, callback);\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getLocationsList(interval, callback) {\n        try {\n            let { limit, offset } = this.options;\n            if (interval) {\n                if (interval.hasOwnProperty('limit')) {\n                    limit = interval.limit;\n                }\n                if (interval.hasOwnProperty('offset')) {\n                    offset = interval.offset;\n                }\n            }\n            return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}location/?limit=${limit}&offset=${offset}`, callback);\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getLocationAreasList(interval, callback) {\n        try {\n            let { limit, offset } = this.options;\n            if (interval) {\n                if (interval.hasOwnProperty('limit')) {\n                    limit = interval.limit;\n                }\n                if (interval.hasOwnProperty('offset')) {\n                    offset = interval.offset;\n                }\n            }\n            return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}location-area/?limit=${limit}&offset=${offset}`, callback);\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getPalParkAreasList(interval, callback) {\n        try {\n            let { limit, offset } = this.options;\n            if (interval) {\n                if (interval.hasOwnProperty('limit')) {\n                    limit = interval.limit;\n                }\n                if (interval.hasOwnProperty('offset')) {\n                    offset = interval.offset;\n                }\n            }\n            return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}pal-park-area/?limit=${limit}&offset=${offset}`, callback);\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getRegionsList(interval, callback) {\n        try {\n            let { limit, offset } = this.options;\n            if (interval) {\n                if (interval.hasOwnProperty('limit')) {\n                    limit = interval.limit;\n                }\n                if (interval.hasOwnProperty('offset')) {\n                    offset = interval.offset;\n                }\n            }\n            return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}region/?limit=${limit}&offset=${offset}`, callback);\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getAbilitiesList(interval, callback) {\n        try {\n            let { limit, offset } = this.options;\n            if (interval) {\n                if (interval.hasOwnProperty('limit')) {\n                    limit = interval.limit;\n                }\n                if (interval.hasOwnProperty('offset')) {\n                    offset = interval.offset;\n                }\n            }\n            return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}ability/?limit=${limit}&offset=${offset}`, callback);\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getCharacteristicsList(interval, callback) {\n        try {\n            let { limit, offset } = this.options;\n            if (interval) {\n                if (interval.hasOwnProperty('limit')) {\n                    limit = interval.limit;\n                }\n                if (interval.hasOwnProperty('offset')) {\n                    offset = interval.offset;\n                }\n            }\n            return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}characteristic/?limit=${limit}&offset=${offset}`, callback);\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getEggGroupsList(interval, callback) {\n        try {\n            let { limit, offset } = this.options;\n            if (interval) {\n                if (interval.hasOwnProperty('limit')) {\n                    limit = interval.limit;\n                }\n                if (interval.hasOwnProperty('offset')) {\n                    offset = interval.offset;\n                }\n            }\n            return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}egg-group/?limit=${limit}&offset=${offset}`, callback);\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getGendersList(interval, callback) {\n        try {\n            let { limit, offset } = this.options;\n            if (interval) {\n                if (interval.hasOwnProperty('limit')) {\n                    limit = interval.limit;\n                }\n                if (interval.hasOwnProperty('offset')) {\n                    offset = interval.offset;\n                }\n            }\n            return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}gender/?limit=${limit}&offset=${offset}`, callback);\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getGrowthRatesList(interval, callback) {\n        try {\n            let { limit, offset } = this.options;\n            if (interval) {\n                if (interval.hasOwnProperty('limit')) {\n                    limit = interval.limit;\n                }\n                if (interval.hasOwnProperty('offset')) {\n                    offset = interval.offset;\n                }\n            }\n            return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}growth-rate/?limit=${limit}&offset=${offset}`, callback);\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getNaturesList(interval, callback) {\n        try {\n            let { limit, offset } = this.options;\n            if (interval) {\n                if (interval.hasOwnProperty('limit')) {\n                    limit = interval.limit;\n                }\n                if (interval.hasOwnProperty('offset')) {\n                    offset = interval.offset;\n                }\n            }\n            return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}nature/?limit=${limit}&offset=${offset}`, callback);\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getPokeathlonStatsList(interval, callback) {\n        try {\n            let { limit, offset } = this.options;\n            if (interval) {\n                if (interval.hasOwnProperty('limit')) {\n                    limit = interval.limit;\n                }\n                if (interval.hasOwnProperty('offset')) {\n                    offset = interval.offset;\n                }\n            }\n            return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}pokeathlon-stat/?limit=${limit}&offset=${offset}`, callback);\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getPokemonsList(interval, callback) {\n        try {\n            let { limit, offset } = this.options;\n            if (interval) {\n                if (interval.hasOwnProperty('limit')) {\n                    limit = interval.limit;\n                }\n                if (interval.hasOwnProperty('offset')) {\n                    offset = interval.offset;\n                }\n            }\n            return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}pokemon/?limit=${limit}&offset=${offset}`, callback);\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getPokemonColorsList(interval, callback) {\n        try {\n            let { limit, offset } = this.options;\n            if (interval) {\n                if (interval.hasOwnProperty('limit')) {\n                    limit = interval.limit;\n                }\n                if (interval.hasOwnProperty('offset')) {\n                    offset = interval.offset;\n                }\n            }\n            return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}pokemon-color/?limit=${limit}&offset=${offset}`, callback);\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getPokemonFormsList(interval, callback) {\n        try {\n            let { limit, offset } = this.options;\n            if (interval) {\n                if (interval.hasOwnProperty('limit')) {\n                    limit = interval.limit;\n                }\n                if (interval.hasOwnProperty('offset')) {\n                    offset = interval.offset;\n                }\n            }\n            return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}pokemon-form/?limit=${limit}&offset=${offset}`, callback);\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getPokemonHabitatsList(interval, callback) {\n        try {\n            let { limit, offset } = this.options;\n            if (interval) {\n                if (interval.hasOwnProperty('limit')) {\n                    limit = interval.limit;\n                }\n                if (interval.hasOwnProperty('offset')) {\n                    offset = interval.offset;\n                }\n            }\n            return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}pokemon-habitat/?limit=${limit}&offset=${offset}`, callback);\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getPokemonShapesList(interval, callback) {\n        try {\n            let { limit, offset } = this.options;\n            if (interval) {\n                if (interval.hasOwnProperty('limit')) {\n                    limit = interval.limit;\n                }\n                if (interval.hasOwnProperty('offset')) {\n                    offset = interval.offset;\n                }\n            }\n            return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}pokemon-shape/?limit=${limit}&offset=${offset}`, callback);\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getPokemonSpeciesList(interval, callback) {\n        try {\n            let { limit, offset } = this.options;\n            if (interval) {\n                if (interval.hasOwnProperty('limit')) {\n                    limit = interval.limit;\n                }\n                if (interval.hasOwnProperty('offset')) {\n                    offset = interval.offset;\n                }\n            }\n            return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}pokemon-species/?limit=${limit}&offset=${offset}`, callback);\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getStatsList(interval, callback) {\n        try {\n            let { limit, offset } = this.options;\n            if (interval) {\n                if (interval.hasOwnProperty('limit')) {\n                    limit = interval.limit;\n                }\n                if (interval.hasOwnProperty('offset')) {\n                    offset = interval.offset;\n                }\n            }\n            return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}stat/?limit=${limit}&offset=${offset}`, callback);\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getTypesList(interval, callback) {\n        try {\n            let { limit, offset } = this.options;\n            if (interval) {\n                if (interval.hasOwnProperty('limit')) {\n                    limit = interval.limit;\n                }\n                if (interval.hasOwnProperty('offset')) {\n                    offset = interval.offset;\n                }\n            }\n            return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}type/?limit=${limit}&offset=${offset}`, callback);\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getLanguagesList(interval, callback) {\n        try {\n            let { limit, offset } = this.options;\n            if (interval) {\n                if (interval.hasOwnProperty('limit')) {\n                    limit = interval.limit;\n                }\n                if (interval.hasOwnProperty('offset')) {\n                    offset = interval.offset;\n                }\n            }\n            return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}language/?limit=${limit}&offset=${offset}`, callback);\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    async getEndpointsList(interval, callback) {\n        try {\n            let { limit, offset } = this.options;\n            if (interval) {\n                if (interval.hasOwnProperty('limit')) {\n                    limit = interval.limit;\n                }\n                if (interval.hasOwnProperty('offset')) {\n                    offset = interval.offset;\n                }\n            }\n            return getJSON(this.options, `${this.options.protocol}${this.options.hostName}${this.options.versionPath}?limit=${limit}&offset=${offset}`, callback);\n        }\n        catch (error) {\n            handleError(error, callback);\n        }\n    }\n    /** Retrieve the configs used */\n    getConfig() {\n        return this.options;\n    }\n    /** Retuns the current number of entries in the cache */\n    getCachedItemsCount() {\n        return this.options.cache.stats.keys;\n    }\n    /** @deprecated use {@link getCachedItemsCount} */\n    cacheSize() {\n        return this.options.cache.stats.keys;\n    }\n    /** Deletes all keys in cache */\n    clearCache() {\n        this.options.cache.flushAll();\n    }\n}\n","class PokeAPIOptions {\n    /* eslint-disable default-param-last */\n    constructor(config = {}, cache) {\n        this.protocol = 'https';\n        this.hostName = '://pokeapi.co';\n        this.versionPath = '/api/v2/';\n        this.offset = 0;\n        this.limit = 100000;\n        this.timeout = 10 * 1000; // 10 seconds\n        this.cacheLimit = 1000000 * 1000; // 11 days\n        this.cache = cache;\n        if (config.protocol) {\n            this.protocol = config.protocol;\n        }\n        if (config.hostName) {\n            this.hostName = `://${config.hostName}`;\n        }\n        if (config.versionPath) {\n            this.versionPath = config.versionPath;\n        }\n        if (config.offset) {\n            this.offset = config.offset - 1;\n        }\n        if (config.limit) {\n            this.limit = config.limit;\n        }\n        if (config.timeout) {\n            this.timeout = config.timeout;\n        }\n        if (config.cacheLimit) {\n            this.cacheLimit = config.cacheLimit;\n        }\n    }\n}\nexport default PokeAPIOptions;\n","/* eslint-disable no-shadow */\n/* eslint-disable no-unused-vars */\nfunction handleError(error, callback) {\n    if (callback) {\n        callback('Pokedex-promise-v2 error', error);\n    }\n    else {\n        throw error;\n    }\n}\nexport default handleError;\n","/* eslint-disable import/no-unresolved */\nimport axios from 'axios';\nimport handleError from './ErrorHandler.js';\nasync function getJSON(values, url, \n// eslint-disable-next-line no-unused-vars\ncallback) {\n    const options = {\n        baseURL: `${values.protocol}${values.hostName}/`,\n        timeout: values.timeout,\n    };\n    try {\n        // Retrieve possible content from memory-cache\n        const cachedResult = values.cache.get(url);\n        // If we have in cache\n        if (callback && cachedResult) {\n            // Call callback without errors\n            callback(cachedResult);\n        }\n        // Return the cache\n        if (cachedResult) {\n            return cachedResult;\n        }\n        // If we don't have in cache\n        // get the data from the API\n        const response = await axios.get(url, options);\n        // If there is an error on the request\n        if (response.status !== 200) {\n            throw response;\n        }\n        // If everything was good\n        // set the data\n        const responseData = response.data;\n        // Cache the object in memory-cache\n        // only if cacheLimit > 0\n        if (values.cacheLimit > 0) {\n            values.cache.set(url, responseData, values.cacheLimit);\n        }\n        // If a callback is present\n        if (callback) {\n            // Call it, without errors\n            callback(responseData);\n        }\n        return responseData;\n    }\n    catch (error) {\n        handleError(error, callback);\n    }\n    // If we return nothing and the error handler fails\n    // reject the promise\n    return Promise.reject();\n}\nexport default getJSON;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import Pokedex from 'pokedex-promise-v2';\r\nconst P = new Pokedex();\r\n\r\nclass PokemonHTML {\r\n    constructor(pokemon) {\r\n        Object.defineProperties(this, {\r\n            name: {\r\n                enumerable: true,\r\n                configurable: false,\r\n                value: pokemon,\r\n            },\r\n        });\r\n    }\r\n    get pokemonCatalogue() {\r\n        return (async () => {\r\n            try {\r\n                const species = await P.getPokemonByName(this.name);\r\n                return [species.name, species.types, species.stats, species.forms, species.abilities];\r\n            }\r\n            catch (error) {\r\n                console.log('ERR >>> ', error);\r\n            }\r\n        })();\r\n    }\r\n    get evolutionChain() {\r\n        return (async () => {\r\n            try {\r\n                const pokemonsToEvolve = [];\r\n                const species = await P.getPokemonSpeciesByName(this.name);\r\n                const evolution = await P.resource(species.evolution_chain.url);\r\n                const evolutionList = evolution.chain.evolves_to;\r\n                for (const pokemon of evolutionList) {\r\n                    pokemonsToEvolve.push(pokemon.species.name);\r\n                }\r\n                return pokemonsToEvolve;\r\n            }\r\n            catch (error) {\r\n                console.log('ERR >>> ', error);\r\n            }\r\n        })();\r\n    }\r\n    get sprite() {\r\n        return (async () => {\r\n            try {\r\n                // Make a request to the pokemon sprite from front.\r\n            }\r\n            catch (error) {\r\n                console.log('ERR >>>', error);\r\n            }\r\n        })();\r\n    }\r\n}\r\n\r\n// const setHTMLsprite = () => {\r\n//     // Set the sprite into a HTML <img> tag.\r\n// };\r\n\r\nconst eevee = new PokemonHTML('eevee');\r\n\r\n(async () => {\r\n    try {\r\n        // console.log(await eevee.pokemonCatalogue);\r\n        const eevolutions = await eevee.evolutionChain;\r\n        const pokemonFilterVaporeon = eevolutions.filter((pokemon) => pokemon === 'vaporeon').join('');\r\n        const vaporeon = new PokemonHTML(pokemonFilterVaporeon);\r\n        const infoV = await vaporeon.pokemonCatalogue;\r\n        console.log(infoV);\r\n    }\r\n    catch (e) {\r\n        console.log(e);\r\n    }\r\n})();\r\n\r\n"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","_catch","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","_toPropertyKey","_createClass","protoProps","staticProps","_toPrimitive","String","input","hint","prim","toPrimitive","res","Number","Pokedex","P","PokemonHTML","pokemon","defineProperties","get","_this","_callee","species","_callee$","_context","getPokemonByName","types","stats","forms","abilities","t0","console","log","_this2","_callee2","pokemonsToEvolve","evolution","evolutionList","_iterator","_step","_callee2$","_context2","getPokemonSpeciesByName","resource","evolution_chain","url","chain","evolves_to","_createForOfIteratorHelper","_callee3","_callee3$","_context3","eevee","_callee4","eevolutions","pokemonFilterVaporeon","vaporeon","infoV","_callee4$","_context4","evolutionChain","filter","join","pokemonCatalogue"],"sourceRoot":""}